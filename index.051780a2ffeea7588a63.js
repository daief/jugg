!function(n){function a(a){for(var t,p,c=a[0],l=a[1],i=a[2],r=0,d=[];r<c.length;r++)p=c[r],e[p]&&d.push(e[p][0]),e[p]=0;for(t in l)Object.prototype.hasOwnProperty.call(l,t)&&(n[t]=l[t]);for(u&&u(a);d.length;)d.shift()();return o.push.apply(o,i||[]),s()}function s(){for(var n,a=0;a<o.length;a++){for(var s=o[a],t=!0,c=1;c<s.length;c++){var l=s[c];0!==e[l]&&(t=!1)}t&&(o.splice(a--,1),n=p(p.s=s[0]))}return n}var t={},e={0:0},o=[];function p(a){if(t[a])return t[a].exports;var s=t[a]={i:a,l:!1,exports:{}};return n[a].call(s.exports,s,s.exports,p),s.l=!0,s.exports}p.m=n,p.c=t,p.d=function(n,a,s){p.o(n,a)||Object.defineProperty(n,a,{enumerable:!0,get:s})},p.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},p.t=function(n,a){if(1&a&&(n=p(n)),8&a)return n;if(4&a&&"object"==typeof n&&n&&n.__esModule)return n;var s=Object.create(null);if(p.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:n}),2&a&&"string"!=typeof n)for(var t in n)p.d(s,t,function(a){return n[a]}.bind(null,t));return s},p.n=function(n){var a=n&&n.__esModule?function(){return n.default}:function(){return n};return p.d(a,"a",a),a},p.o=function(n,a){return Object.prototype.hasOwnProperty.call(n,a)},p.p="./";var c=window.webpackJsonp=window.webpackJsonp||[],l=c.push.bind(c);c.push=a,c=c.slice();for(var i=0;i<c.length;i++)a(c[i]);var u=l;o.push([266,1]),s()}({266:function(n,a,s){n.exports=s(439)},281:function(n,a,s){"use strict";s.r(a),s.d(a,"metadata",function(){return t}),s.d(a,"extra",function(){return e}),s.d(a,"html",function(){return o});const t={title:"README"},e='<h1 id="Jugg">Jugg<a name="Jugg" class="anchor" href="#Jugg"></a></h1><p>Learn to build a front-end scaffold 🛠️ base on Webpack.</p>\n<p>学习编写一款基于 Webpack 的前端脚手架 <code>jugg</code>，同时在这里维护一些插件。</p>\n',o='<h1 id="Jugg">Jugg<a name="Jugg" class="anchor" href="#Jugg"></a></h1><p>Learn to build a front-end scaffold 🛠️ base on Webpack.</p>\n<p>学习编写一款基于 Webpack 的前端脚手架 <code>jugg</code>，同时在这里维护一些插件。</p>\n';a.default=[]},282:function(n,a,s){"use strict";s.r(a),s.d(a,"metadata",function(){return t}),s.d(a,"extra",function(){return e}),s.d(a,"html",function(){return o});const t={title:"CHANGELOG"},e='<h2 id="0.2.1-alpha.2 - 2020-01-10">0.2.1-alpha.2 - 2020-01-10<a name="0.2.1-alpha.2 - 2020-01-10" class="anchor" href="#0.2.1-alpha.2 - 2020-01-10"></a></h2><ul>\n<li>feat: 插件可以扩展用户配置</li>\n<li>refactor: <code>quiet</code> of <code>webpack-dev-server</code> always true</li>\n<li>refactor: 配置文件统一管理，如 <code>tsconfig.json</code></li>\n</ul>\n<h2 id="0.2.1-alpha.1 - 2020-01-02">0.2.1-alpha.1 - 2020-01-02<a name="0.2.1-alpha.1 - 2020-01-02" class="anchor" href="#0.2.1-alpha.1 - 2020-01-02"></a></h2><ul>\n<li>refactor: 方法整理，并导出内置方法</li>\n</ul>\n<h2 id="0.2.1-alpha.0 - 2020-01-02">0.2.1-alpha.0 - 2020-01-02<a name="0.2.1-alpha.0 - 2020-01-02" class="anchor" href="#0.2.1-alpha.0 - 2020-01-02"></a></h2><ul>\n<li>refactor: 集中式管理 webpack 插件、loader 等等的配置项，并对外提供获取、修改的途径</li>\n<li>feat: 新增 <code>jugg inspect</code> 命令用于查看配置</li>\n<li>feat: 命令行支持 <code>mode=</code> 以配置 <code>NODE_ENV</code>，默认 <code>development</code><ul>\n<li>但当运行 <code>dev</code>、<code>build</code> 时，<code>NODE_ENV</code> 总是为 <code>development</code> 和 <code>production</code></li>\n</ul>\n</li>\n<li>feat: 除了自动载入 <code>.env</code> 环境变量文件，还会根据 <code>mode</code> 载入 <code>.mode.env</code> 文件</li>\n<li>refactor: webpack 回调中注入 <code>jugg</code></li>\n</ul>\n<h2 id="0.2.0 - 2019-11-11">0.2.0 - 2019-11-11<a name="0.2.0 - 2019-11-11" class="anchor" href="#0.2.0 - 2019-11-11"></a></h2><ul>\n<li>feat: support set <code>tsconfig.json</code> by <code>JUGG_TS_PROJECT</code> env</li>\n</ul>\n',o='<h2 id="0.2.1-alpha.2 - 2020-01-10">0.2.1-alpha.2 - 2020-01-10<a name="0.2.1-alpha.2 - 2020-01-10" class="anchor" href="#0.2.1-alpha.2 - 2020-01-10"></a></h2><ul>\n<li>feat: 插件可以扩展用户配置</li>\n<li>refactor: <code>quiet</code> of <code>webpack-dev-server</code> always true</li>\n<li>refactor: 配置文件统一管理，如 <code>tsconfig.json</code></li>\n</ul>\n<h2 id="0.2.1-alpha.1 - 2020-01-02">0.2.1-alpha.1 - 2020-01-02<a name="0.2.1-alpha.1 - 2020-01-02" class="anchor" href="#0.2.1-alpha.1 - 2020-01-02"></a></h2><ul>\n<li>refactor: 方法整理，并导出内置方法</li>\n</ul>\n<h2 id="0.2.1-alpha.0 - 2020-01-02">0.2.1-alpha.0 - 2020-01-02<a name="0.2.1-alpha.0 - 2020-01-02" class="anchor" href="#0.2.1-alpha.0 - 2020-01-02"></a></h2><ul>\n<li>refactor: 集中式管理 webpack 插件、loader 等等的配置项，并对外提供获取、修改的途径</li>\n<li>feat: 新增 <code>jugg inspect</code> 命令用于查看配置</li>\n<li>feat: 命令行支持 <code>mode=</code> 以配置 <code>NODE_ENV</code>，默认 <code>development</code><ul>\n<li>但当运行 <code>dev</code>、<code>build</code> 时，<code>NODE_ENV</code> 总是为 <code>development</code> 和 <code>production</code></li>\n</ul>\n</li>\n<li>feat: 除了自动载入 <code>.env</code> 环境变量文件，还会根据 <code>mode</code> 载入 <code>.mode.env</code> 文件</li>\n<li>refactor: webpack 回调中注入 <code>jugg</code></li>\n</ul>\n<h2 id="0.2.0 - 2019-11-11">0.2.0 - 2019-11-11<a name="0.2.0 - 2019-11-11" class="anchor" href="#0.2.0 - 2019-11-11"></a></h2><ul>\n<li>feat: support set <code>tsconfig.json</code> by <code>JUGG_TS_PROJECT</code> env</li>\n</ul>\n';a.default=[]},283:function(n,a,s){"use strict";s.r(a),s.d(a,"metadata",function(){return t}),s.d(a,"extra",function(){return e}),s.d(a,"html",function(){return o});const t={title:"README"},e='\n\n<h1 id="Jugg">Jugg<a name="Jugg" class="anchor" href="#Jugg"></a></h1><p>A front-end scaffold 🛠️ works with Webpack.</p>\n<h1 id="basic commands">basic commands<a name="basic commands" class="anchor" href="#basic commands"></a></h1><pre class="language-bash"><code><span class="token comment"># start a webpack-dev-server / 启动 dev 服务</span>\n$ jugg dev\n\n<span class="token comment"># build with webpack / 启动打包命令</span>\n$ jugg build\n\n<span class="token comment"># inspect webpack config / 检查 webpack 配置</span>\n$ jugg inspect\n\n<span class="token comment"># help / 查看帮助</span>\n$ jugg -h</code></pre><h2 id="options">options<a name="options" class="anchor" href="#options"></a></h2><h3 id="-C, --config">-C, --config<a name="-C, --config" class="anchor" href="#-C, --config"></a></h3><p>指定特定的配置文件，默认会读取 <code>.juggrc.ts</code>、<code>.juggrc.js</code> 等。</p>\n<pre class="language-bash"><code><span class="token comment"># 加载 .myconfig.ts 配置文件</span>\n$ jugg dev --config<span class="token operator">=</span>.myconfig.ts</code></pre><h3 id="-M, --mode">-M, --mode<a name="-M, --mode" class="anchor" href="#-M, --mode"></a></h3><p>指定 <code>process.env.NODE_ENV</code></p>\n<pre class="language-bash"><code><span class="token comment"># 查看 production 环境的 webpack 配置</span>\n$ jugg inspect --mode<span class="token operator">=</span>production</code></pre><h2 id="jugg dev">jugg dev<a name="jugg dev" class="anchor" href="#jugg dev"></a></h2><pre class="language-bash"><code>$ jugg dev -h\nUsage: dev <span class="token punctuation">[</span>options<span class="token punctuation">]</span>\n\nstart dev server\n\nOptions:\n  -p, --port <span class="token punctuation">[</span>port<span class="token punctuation">]</span>              dev server port\n  --noDevClients <span class="token punctuation">[</span>noDevClients<span class="token punctuation">]</span>  when set, <span class="token keyword">do</span> not <span class="token function">add</span> dev clients to webpack entry  <span class="token punctuation">(</span>default: <span class="token boolean">false</span><span class="token punctuation">)</span>\n  -h, --help                     output usage information\n</code></pre><blockquote>\n<p><del><a href="https://github.com/webpack/webpack-dev-server/releases/tag/v3.2.0">Since webpack-dev-server v3.2.0</a>, automatically add the HMR plugin when hot or hotOnly is enabled. Can set <code>noDevClients</code> to disable built-in config to entry.</del></p>\n<p>现在可以不用顾及 <code>noDevClients</code> 的设置了，未来也会进行移除。</p>\n</blockquote>\n<h2 id="jugg build">jugg build<a name="jugg build" class="anchor" href="#jugg build"></a></h2><pre class="language-bash"><code>$ jugg build -h\nUsage: build <span class="token punctuation">[</span>options<span class="token punctuation">]</span>\n\n<span class="token builtin class-name">exec</span> build\n\nOptions:\n  -h, --help  output usage information</code></pre><h2 id="jugg inspect">jugg inspect<a name="jugg inspect" class="anchor" href="#jugg inspect"></a></h2><pre class="language-bash"><code>$ jugg inspect -h\nUsage: inspect <span class="token punctuation">[</span>options<span class="token punctuation">]</span>\n\ninspect webpack config\n\nOptions:\n  -P, --path <span class="token punctuation">[</span>path<span class="token punctuation">]</span>  a path <span class="token function">file</span> to <span class="token function">write</span> result\n  -h, --help         output usage information</code></pre><h1 id="getting started">getting started<a name="getting started" class="anchor" href="#getting started"></a></h1><p>只要创建满足如下结构的目录，就可以开始使用了，入口文件会是 <code>src/index</code>，可以是 JS 或 TS。只有当使用 TypeScript 时才需要创建 <code>tsconfig.json</code>。</p>\n<pre class="language-bash"><code><span class="token builtin class-name">.</span>\n├── src\n│   └── index.ts\n└── tsconfig.json\n</code></pre><h1 id="config file">config file<a name="config file" class="anchor" href="#config file"></a></h1><p>Create a file named <code>.juggrc.js</code>, <code>.juggrc.ts</code>, <code>jugg.config.js</code>, etc. Export default a object.</p>\n<p>创建名为 <code>.juggrc.js</code>、<code>.juggrc.ts</code> 或 <code>jugg.config.js</code> 的文件，默认导出一个对象。</p>\n<p>一份可行的配置可参考：<a href="https://github.com/daief/jugg/blob/master/examples/ts-lib/.juggrc.ts">jugg/examples/ts-lib</a>。</p>\n<h2 id="插件的使用">插件的使用<a name="插件的使用" class="anchor" href="#插件的使用"></a></h2><p>配置格式与 babel 插件类似。</p>\n<pre class="language-ts"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> extendConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@axew/jugg\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">extendConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// 普通地加载插件</span>\n    <span class="token string">\'@axew/jugg-plugin-vue\'</span><span class="token punctuation">,</span>\n    <span class="token comment">// 加载自定义插件，并传入配置</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">\'./plugins/foo.js\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n        bool<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="配置对象的类型描述">配置对象的类型描述<a name="配置对象的类型描述" class="anchor" href="#配置对象的类型描述"></a></h2><pre class="language-ts"><code><span class="token keyword">interface</span> <span class="token class-name">JuggConfig</span> <span class="token punctuation">{</span>\n <span class="token doc-comment comment"> /**\n   * publicPath of webpack, default \'/\'\n   */</span>\n  publicPath<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * output path of webpack, default \'dist\'\n   */</span>\n  outputDir<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * 配置插件\n   */</span>\n  plugins<span class="token operator">?</span><span class="token punctuation">:</span> PluginCfgSchema<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * webpack DefinePluin\n   */</span>\n  define<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>k<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * open chunks config? default true\n   */</span>\n  chunks<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * sourceMap, default true\n   */</span>\n  sourceMap<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * webpack 配置扩展\n   */</span>\n  webpack<span class="token operator">?</span><span class="token punctuation">:</span> JuggWebpack<span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * ts-loader custom transformers, only works when ts-loader is enabled\n   */</span>\n  tsCustomTransformers<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    before<span class="token operator">?</span><span class="token punctuation">:</span> PluginCfgSchema<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    after<span class="token operator">?</span><span class="token punctuation">:</span> PluginCfgSchema<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * set bundle file name in production env, default `[name].[chunkhash]`.\n   * affect js, css.\n   */</span>\n  filename<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * built-in base webpack html plugin config.\n   * set false to rm plugin.\n   */</span>\n  html<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token operator">|</span> KeyValuePair<span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * config of css, less, postcss...\n   */</span>\n  css<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    loaderOptions<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n     <span class="token doc-comment comment"> /**\n       * https://github.com/webpack-contrib/css-loader#options\n       */</span>\n      css<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n     <span class="token doc-comment comment"> /**\n       * http://lesscss.org/usage/#command-line-usage-options\n       */</span>\n      less<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n     <span class="token doc-comment comment"> /**\n       * https://github.com/postcss/postcss-loader/tree/v3.0.0#options\n       * when `false`, disable the `postcss`\n       */</span>\n      postcss<span class="token operator">?</span><span class="token punctuation">:</span>\n        <span class="token operator">|</span> <span class="token punctuation">{</span>\n            config<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              context<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n              path<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n           <span class="token doc-comment comment"> /**\n             * when `false`, disable built-in plugins\n             */</span>\n            plugins<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n            <span class="token punctuation">[</span>k<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n        <span class="token operator">|</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * add dependencies to compile by ts-loader or babel\n   * if item is string, it will be convert a regex such as `join(\'node_modules\', item, \'/\')`\n   * <span class="token keyword">@since</span> 0.1.1\n   */</span>\n  transpileDependencies<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> RegExp<span class="token operator">></span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pth<span class="token punctuation">:</span> <span class="token builtin">string</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">type</span> JuggWebpack <span class="token operator">=</span> webpack<span class="token punctuation">.</span>Configuration <span class="token operator">|</span> <span class="token punctuation">(</span>\n  <span class="token parameter">param<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    config<span class="token punctuation">:</span> webpackChain<span class="token punctuation">.</span>Config<span class="token punctuation">;</span>\n    webpack<span class="token punctuation">:</span> webpack<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span>\n    jugg<span class="token punctuation">:</span> Jugg<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span></span>\n<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span> <span class="token operator">|</span> webpack<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span>\n\n<span class="token keyword">type</span> PluginCfgSchema <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>k<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token operator">?</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><h1 id="env">env<a name="env" class="anchor" href="#env"></a></h1><p>支持的环境变量。</p>\n<ul>\n<li>ANALYZE<ul>\n<li>enable webpack-bundle-analyzer</li>\n</ul>\n</li>\n<li>ANALYZE_PORT<ul>\n<li>webpack-bundle-analyzer server port, default 8888</li>\n</ul>\n</li>\n<li>ANALYZE_DUMP<ul>\n<li>generate stats file while ANALYZE_DUMP exist</li>\n</ul>\n</li>\n<li>FORK_TS_CHECKER<ul>\n<li>set <code>none</code>, disbale fork-ts-checker-webpack-plugin</li>\n</ul>\n</li>\n<li>HARD_SOURCE<ul>\n<li>set <code>none</code>, disbale hard-source-webpack-plugin</li>\n</ul>\n</li>\n<li>NO_WEBPACKBAR<ul>\n<li>when opened, remove webpackbar plugin</li>\n</ul>\n</li>\n<li>JUGG_TS_PROJECT<ul>\n<li>set a value to assign a specific tsconfig.json / 指定自定义的 TS 配置文件</li>\n</ul>\n</li>\n</ul>\n<h1 id="<code>TS</code> or <code>JS</code>"><code>TS</code> or <code>JS</code><a name="<code>TS</code> or <code>JS</code>" class="anchor" href="#<code>TS</code> or <code>JS</code>"></a></h1><p>Both <code>TS</code> and <code>JS</code> can be used together in a project with <code>jugg</code>. There are several situations with handleing TS and JS:</p>\n<ul>\n<li><strong>Default &amp; Recommended</strong>: create a <code>tsconfig.json</code>, then jugg will load ts-loader and use it to compile <code>ts</code>, <code>tsx</code>, <code>js</code>, <code>tsx</code>. <code>babel</code> is needless here.<ul>\n<li>ts-loader: ts, tsx, js, jsx</li>\n<li>babel: needless</li>\n</ul>\n</li>\n<li>Set config in <code>.juggrc.js</code> with <code>jugg-plugin-babel</code>. Babel plugin will rewrite built-in config of ts-loader for <code>js</code> and <code>jsx</code> and handle them with itself.<ul>\n<li>ts-loader: ts, tsx</li>\n<li>babel: js, jsx</li>\n</ul>\n</li>\n<li>Set <code>compileTs: true</code> in <code>jugg-plugin-babel</code> config will clean all built-in ts-loader options. Babel handles all the files.<ul>\n<li>ts-loader: cleaned</li>\n<li>babel: ts, tsx, js, jsx</li>\n</ul>\n</li>\n</ul>\n<h1 id="Notice">Notice<a name="Notice" class="anchor" href="#Notice"></a></h1><ul>\n<li><code>import()</code> works with <code>&quot;module&quot;: &quot;esnext&quot;</code> in <code>tsconfig.json</code>, <a href="https://github.com/webpack/webpack/issues/5703#issuecomment-357512412">detail</a>.</li>\n<li>Use <code>.browserslistrc</code> config or <code>browserslist</code> key in package.json to share target browsers with Babel, ESLint and Stylelint. See <a href="https://github.com/browserslist/browserslist#queries">Browserslist docs</a> for available queries and default value.<pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// previous built-in config</span>\n  <span class="token property">"browserslist"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">"last 2 versions"</span><span class="token punctuation">,</span>\n    <span class="token string">"Firefox ESR"</span><span class="token punctuation">,</span>\n    <span class="token string">"> 1%"</span><span class="token punctuation">,</span>\n    <span class="token string">"ie >= 9"</span><span class="token punctuation">,</span>\n    <span class="token string">"iOS >= 8"</span><span class="token punctuation">,</span>\n    <span class="token string">"Android >= 4"</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre></li>\n<li><code>jugg</code> 默认不进行 <code>polyfill</code></li>\n</ul>\n',o='\n\n<h1 id="Jugg">Jugg<a name="Jugg" class="anchor" href="#Jugg"></a></h1><p>A front-end scaffold 🛠️ works with Webpack.</p>\n<h1 id="basic commands">basic commands<a name="basic commands" class="anchor" href="#basic commands"></a></h1><pre class="language-bash"><code><span class="token comment"># start a webpack-dev-server / 启动 dev 服务</span>\n$ jugg dev\n\n<span class="token comment"># build with webpack / 启动打包命令</span>\n$ jugg build\n\n<span class="token comment"># inspect webpack config / 检查 webpack 配置</span>\n$ jugg inspect\n\n<span class="token comment"># help / 查看帮助</span>\n$ jugg -h</code></pre><h2 id="options">options<a name="options" class="anchor" href="#options"></a></h2><h3 id="-C, --config">-C, --config<a name="-C, --config" class="anchor" href="#-C, --config"></a></h3><p>指定特定的配置文件，默认会读取 <code>.juggrc.ts</code>、<code>.juggrc.js</code> 等。</p>\n<pre class="language-bash"><code><span class="token comment"># 加载 .myconfig.ts 配置文件</span>\n$ jugg dev --config<span class="token operator">=</span>.myconfig.ts</code></pre><h3 id="-M, --mode">-M, --mode<a name="-M, --mode" class="anchor" href="#-M, --mode"></a></h3><p>指定 <code>process.env.NODE_ENV</code></p>\n<pre class="language-bash"><code><span class="token comment"># 查看 production 环境的 webpack 配置</span>\n$ jugg inspect --mode<span class="token operator">=</span>production</code></pre><h2 id="jugg dev">jugg dev<a name="jugg dev" class="anchor" href="#jugg dev"></a></h2><pre class="language-bash"><code>$ jugg dev -h\nUsage: dev <span class="token punctuation">[</span>options<span class="token punctuation">]</span>\n\nstart dev server\n\nOptions:\n  -p, --port <span class="token punctuation">[</span>port<span class="token punctuation">]</span>              dev server port\n  --noDevClients <span class="token punctuation">[</span>noDevClients<span class="token punctuation">]</span>  when set, <span class="token keyword">do</span> not <span class="token function">add</span> dev clients to webpack entry  <span class="token punctuation">(</span>default: <span class="token boolean">false</span><span class="token punctuation">)</span>\n  -h, --help                     output usage information\n</code></pre><blockquote>\n<p><del><a href="https://github.com/webpack/webpack-dev-server/releases/tag/v3.2.0">Since webpack-dev-server v3.2.0</a>, automatically add the HMR plugin when hot or hotOnly is enabled. Can set <code>noDevClients</code> to disable built-in config to entry.</del></p>\n<p>现在可以不用顾及 <code>noDevClients</code> 的设置了，未来也会进行移除。</p>\n</blockquote>\n<h2 id="jugg build">jugg build<a name="jugg build" class="anchor" href="#jugg build"></a></h2><pre class="language-bash"><code>$ jugg build -h\nUsage: build <span class="token punctuation">[</span>options<span class="token punctuation">]</span>\n\n<span class="token builtin class-name">exec</span> build\n\nOptions:\n  -h, --help  output usage information</code></pre><h2 id="jugg inspect">jugg inspect<a name="jugg inspect" class="anchor" href="#jugg inspect"></a></h2><pre class="language-bash"><code>$ jugg inspect -h\nUsage: inspect <span class="token punctuation">[</span>options<span class="token punctuation">]</span>\n\ninspect webpack config\n\nOptions:\n  -P, --path <span class="token punctuation">[</span>path<span class="token punctuation">]</span>  a path <span class="token function">file</span> to <span class="token function">write</span> result\n  -h, --help         output usage information</code></pre><h1 id="getting started">getting started<a name="getting started" class="anchor" href="#getting started"></a></h1><p>只要创建满足如下结构的目录，就可以开始使用了，入口文件会是 <code>src/index</code>，可以是 JS 或 TS。只有当使用 TypeScript 时才需要创建 <code>tsconfig.json</code>。</p>\n<pre class="language-bash"><code><span class="token builtin class-name">.</span>\n├── src\n│   └── index.ts\n└── tsconfig.json\n</code></pre><h1 id="config file">config file<a name="config file" class="anchor" href="#config file"></a></h1><p>Create a file named <code>.juggrc.js</code>, <code>.juggrc.ts</code>, <code>jugg.config.js</code>, etc. Export default a object.</p>\n<p>创建名为 <code>.juggrc.js</code>、<code>.juggrc.ts</code> 或 <code>jugg.config.js</code> 的文件，默认导出一个对象。</p>\n<p>一份可行的配置可参考：<a href="https://github.com/daief/jugg/blob/master/examples/ts-lib/.juggrc.ts">jugg/examples/ts-lib</a>。</p>\n<h2 id="插件的使用">插件的使用<a name="插件的使用" class="anchor" href="#插件的使用"></a></h2><p>配置格式与 babel 插件类似。</p>\n<pre class="language-ts"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> extendConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@axew/jugg\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">extendConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// 普通地加载插件</span>\n    <span class="token string">\'@axew/jugg-plugin-vue\'</span><span class="token punctuation">,</span>\n    <span class="token comment">// 加载自定义插件，并传入配置</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">\'./plugins/foo.js\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        name<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n        bool<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="配置对象的类型描述">配置对象的类型描述<a name="配置对象的类型描述" class="anchor" href="#配置对象的类型描述"></a></h2><pre class="language-ts"><code><span class="token keyword">interface</span> <span class="token class-name">JuggConfig</span> <span class="token punctuation">{</span>\n <span class="token doc-comment comment"> /**\n   * publicPath of webpack, default \'/\'\n   */</span>\n  publicPath<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * output path of webpack, default \'dist\'\n   */</span>\n  outputDir<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * 配置插件\n   */</span>\n  plugins<span class="token operator">?</span><span class="token punctuation">:</span> PluginCfgSchema<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * webpack DefinePluin\n   */</span>\n  define<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>k<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * open chunks config? default true\n   */</span>\n  chunks<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * sourceMap, default true\n   */</span>\n  sourceMap<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * webpack 配置扩展\n   */</span>\n  webpack<span class="token operator">?</span><span class="token punctuation">:</span> JuggWebpack<span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * ts-loader custom transformers, only works when ts-loader is enabled\n   */</span>\n  tsCustomTransformers<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    before<span class="token operator">?</span><span class="token punctuation">:</span> PluginCfgSchema<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    after<span class="token operator">?</span><span class="token punctuation">:</span> PluginCfgSchema<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * set bundle file name in production env, default `[name].[chunkhash]`.\n   * affect js, css.\n   */</span>\n  filename<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * built-in base webpack html plugin config.\n   * set false to rm plugin.\n   */</span>\n  html<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token boolean">false</span> <span class="token operator">|</span> KeyValuePair<span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * config of css, less, postcss...\n   */</span>\n  css<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    loaderOptions<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n     <span class="token doc-comment comment"> /**\n       * https://github.com/webpack-contrib/css-loader#options\n       */</span>\n      css<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n     <span class="token doc-comment comment"> /**\n       * http://lesscss.org/usage/#command-line-usage-options\n       */</span>\n      less<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n     <span class="token doc-comment comment"> /**\n       * https://github.com/postcss/postcss-loader/tree/v3.0.0#options\n       * when `false`, disable the `postcss`\n       */</span>\n      postcss<span class="token operator">?</span><span class="token punctuation">:</span>\n        <span class="token operator">|</span> <span class="token punctuation">{</span>\n            config<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n              context<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n              path<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">;</span>\n           <span class="token doc-comment comment"> /**\n             * when `false`, disable built-in plugins\n             */</span>\n            plugins<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n            <span class="token punctuation">[</span>k<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n        <span class="token operator">|</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * add dependencies to compile by ts-loader or babel\n   * if item is string, it will be convert a regex such as `join(\'node_modules\', item, \'/\')`\n   * <span class="token keyword">@since</span> 0.1.1\n   */</span>\n  transpileDependencies<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> RegExp<span class="token operator">></span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pth<span class="token punctuation">:</span> <span class="token builtin">string</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">type</span> JuggWebpack <span class="token operator">=</span> webpack<span class="token punctuation">.</span>Configuration <span class="token operator">|</span> <span class="token punctuation">(</span>\n  <span class="token parameter">param<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    config<span class="token punctuation">:</span> webpackChain<span class="token punctuation">.</span>Config<span class="token punctuation">;</span>\n    webpack<span class="token punctuation">:</span> webpack<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span>\n    jugg<span class="token punctuation">:</span> Jugg<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span></span>\n<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span> <span class="token operator">|</span> webpack<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span>\n\n<span class="token keyword">type</span> PluginCfgSchema <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>k<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token operator">?</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre><h1 id="env">env<a name="env" class="anchor" href="#env"></a></h1><p>支持的环境变量。</p>\n<ul>\n<li>ANALYZE<ul>\n<li>enable webpack-bundle-analyzer</li>\n</ul>\n</li>\n<li>ANALYZE_PORT<ul>\n<li>webpack-bundle-analyzer server port, default 8888</li>\n</ul>\n</li>\n<li>ANALYZE_DUMP<ul>\n<li>generate stats file while ANALYZE_DUMP exist</li>\n</ul>\n</li>\n<li>FORK_TS_CHECKER<ul>\n<li>set <code>none</code>, disbale fork-ts-checker-webpack-plugin</li>\n</ul>\n</li>\n<li>HARD_SOURCE<ul>\n<li>set <code>none</code>, disbale hard-source-webpack-plugin</li>\n</ul>\n</li>\n<li>NO_WEBPACKBAR<ul>\n<li>when opened, remove webpackbar plugin</li>\n</ul>\n</li>\n<li>JUGG_TS_PROJECT<ul>\n<li>set a value to assign a specific tsconfig.json / 指定自定义的 TS 配置文件</li>\n</ul>\n</li>\n</ul>\n<h1 id="<code>TS</code> or <code>JS</code>"><code>TS</code> or <code>JS</code><a name="<code>TS</code> or <code>JS</code>" class="anchor" href="#<code>TS</code> or <code>JS</code>"></a></h1><p>Both <code>TS</code> and <code>JS</code> can be used together in a project with <code>jugg</code>. There are several situations with handleing TS and JS:</p>\n<ul>\n<li><strong>Default &amp; Recommended</strong>: create a <code>tsconfig.json</code>, then jugg will load ts-loader and use it to compile <code>ts</code>, <code>tsx</code>, <code>js</code>, <code>tsx</code>. <code>babel</code> is needless here.<ul>\n<li>ts-loader: ts, tsx, js, jsx</li>\n<li>babel: needless</li>\n</ul>\n</li>\n<li>Set config in <code>.juggrc.js</code> with <code>jugg-plugin-babel</code>. Babel plugin will rewrite built-in config of ts-loader for <code>js</code> and <code>jsx</code> and handle them with itself.<ul>\n<li>ts-loader: ts, tsx</li>\n<li>babel: js, jsx</li>\n</ul>\n</li>\n<li>Set <code>compileTs: true</code> in <code>jugg-plugin-babel</code> config will clean all built-in ts-loader options. Babel handles all the files.<ul>\n<li>ts-loader: cleaned</li>\n<li>babel: ts, tsx, js, jsx</li>\n</ul>\n</li>\n</ul>\n<h1 id="Notice">Notice<a name="Notice" class="anchor" href="#Notice"></a></h1><ul>\n<li><code>import()</code> works with <code>&quot;module&quot;: &quot;esnext&quot;</code> in <code>tsconfig.json</code>, <a href="https://github.com/webpack/webpack/issues/5703#issuecomment-357512412">detail</a>.</li>\n<li>Use <code>.browserslistrc</code> config or <code>browserslist</code> key in package.json to share target browsers with Babel, ESLint and Stylelint. See <a href="https://github.com/browserslist/browserslist#queries">Browserslist docs</a> for available queries and default value.<pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// previous built-in config</span>\n  <span class="token property">"browserslist"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">"last 2 versions"</span><span class="token punctuation">,</span>\n    <span class="token string">"Firefox ESR"</span><span class="token punctuation">,</span>\n    <span class="token string">"> 1%"</span><span class="token punctuation">,</span>\n    <span class="token string">"ie >= 9"</span><span class="token punctuation">,</span>\n    <span class="token string">"iOS >= 8"</span><span class="token punctuation">,</span>\n    <span class="token string">"Android >= 4"</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre></li>\n<li><code>jugg</code> 默认不进行 <code>polyfill</code></li>\n</ul>\n';a.default=[]},284:function(n,a,s){"use strict";s.r(a),s.d(a,"metadata",function(){return t}),s.d(a,"extra",function(){return e}),s.d(a,"html",function(){return o});const t={title:"README"},e='<h1 id="jugg-plugin-babel">jugg-plugin-babel<a name="jugg-plugin-babel" class="anchor" href="#jugg-plugin-babel"></a></h1><p>A set of babel config. A plugin of jugg.</p>\n<p>babel 配置合集，作为一个 jugg 的插件而使用，为项目添加 babel 支持。</p>\n<h1 id="使用">使用<a name="使用" class="anchor" href="#使用"></a></h1><p>在配置文件中添加插件。</p>\n<pre class="language-ts"><code><span class="token comment">// .juggrc.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> extendConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@axew/jugg\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">extendConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'@axew/jugg-plugin-babel\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="配置">配置<a name="配置" class="anchor" href="#配置"></a></h1><pre class="language-ts"><code><span class="token keyword">interface</span> <span class="token class-name">Option</span> <span class="token punctuation">{</span>\n  <span class="token comment">// use cache? default true</span>\n  cache<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  <span class="token comment">// allow .babelrc? default false</span>\n  babelrc<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  <span class="token comment">// more presets</span>\n  presets<span class="token operator">?</span><span class="token punctuation">:</span> PluginCfgSchema<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token comment">// more plugins</span>\n  plugins<span class="token operator">?</span><span class="token punctuation">:</span> PluginCfgSchema<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token comment">// use babel to compile ts、tsx, enabling this will clear built-in ts-loader, default false,</span>\n  compileTs<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  <span class="token comment">// some options about @babel/preset-env &amp; @babel/plugin-transform-runtime</span>\n  juggPreset<span class="token operator">?</span><span class="token punctuation">:</span> IJuggPreset<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">IJuggPreset</span> <span class="token punctuation">{</span>\n  <span class="token comment">// https://babeljs.io/docs/en/babel-preset-env</span>\n  useBuiltIns<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  loose<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  targets<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    browsers<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">[</span>k<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  modules<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  <span class="token comment">// rest options of `@babel/preset-env`</span>\n  env<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span>k<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token comment">// https://babeljs.io/docs/en/babel-plugin-transform-runtime</span>\n  transformRuntime<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span>k<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>',o='<h1 id="jugg-plugin-babel">jugg-plugin-babel<a name="jugg-plugin-babel" class="anchor" href="#jugg-plugin-babel"></a></h1><p>A set of babel config. A plugin of jugg.</p>\n<p>babel 配置合集，作为一个 jugg 的插件而使用，为项目添加 babel 支持。</p>\n<h1 id="使用">使用<a name="使用" class="anchor" href="#使用"></a></h1><p>在配置文件中添加插件。</p>\n<pre class="language-ts"><code><span class="token comment">// .juggrc.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> extendConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@axew/jugg\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">extendConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'@axew/jugg-plugin-babel\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h1 id="配置">配置<a name="配置" class="anchor" href="#配置"></a></h1><pre class="language-ts"><code><span class="token keyword">interface</span> <span class="token class-name">Option</span> <span class="token punctuation">{</span>\n  <span class="token comment">// use cache? default true</span>\n  cache<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  <span class="token comment">// allow .babelrc? default false</span>\n  babelrc<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  <span class="token comment">// more presets</span>\n  presets<span class="token operator">?</span><span class="token punctuation">:</span> PluginCfgSchema<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token comment">// more plugins</span>\n  plugins<span class="token operator">?</span><span class="token punctuation">:</span> PluginCfgSchema<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token comment">// use babel to compile ts、tsx, enabling this will clear built-in ts-loader, default false,</span>\n  compileTs<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  <span class="token comment">// some options about @babel/preset-env &amp; @babel/plugin-transform-runtime</span>\n  juggPreset<span class="token operator">?</span><span class="token punctuation">:</span> IJuggPreset<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">IJuggPreset</span> <span class="token punctuation">{</span>\n  <span class="token comment">// https://babeljs.io/docs/en/babel-preset-env</span>\n  useBuiltIns<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  loose<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  targets<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    browsers<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">[</span>k<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  modules<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  <span class="token comment">// rest options of `@babel/preset-env`</span>\n  env<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span>k<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token comment">// https://babeljs.io/docs/en/babel-plugin-transform-runtime</span>\n  transformRuntime<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span>k<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre>';a.default=[]},285:function(n,a,s){"use strict";s.r(a),s.d(a,"metadata",function(){return t}),s.d(a,"extra",function(){return e}),s.d(a,"html",function(){return o});const t={title:"CHANGELOG"},e='<ul>\n<li><input disabled="" type="checkbox"> 组件内容自定义，如 footer、header 等部分</li>\n<li><input disabled="" type="checkbox"> 路由模式配置</li>\n<li><input disabled="" type="checkbox"> 扩展 html 模板</li>\n</ul>\n<h2 id="0.0.1-alpha.2 - 2020-01-14">0.0.1-alpha.2 - 2020-01-14<a name="0.0.1-alpha.2 - 2020-01-14" class="anchor" href="#0.0.1-alpha.2 - 2020-01-14"></a></h2><ul>\n<li>refactor: 修正 layout 默认值的断言</li>\n</ul>\n<h2 id="0.0.1-alpha.1 - 2020-01-10">0.0.1-alpha.1 - 2020-01-10<a name="0.0.1-alpha.1 - 2020-01-10" class="anchor" href="#0.0.1-alpha.1 - 2020-01-10"></a></h2><ul>\n<li>feat: 网站成功运行</li>\n<li>feat: run React demo</li>\n<li>feat: run Vue demo</li>\n<li>feat: 优化路由</li>\n<li>feat: 添加内置的 TS 配置</li>\n</ul>\n',o='<ul>\n<li><input disabled="" type="checkbox"> 组件内容自定义，如 footer、header 等部分</li>\n<li><input disabled="" type="checkbox"> 路由模式配置</li>\n<li><input disabled="" type="checkbox"> 扩展 html 模板</li>\n</ul>\n<h2 id="0.0.1-alpha.2 - 2020-01-14">0.0.1-alpha.2 - 2020-01-14<a name="0.0.1-alpha.2 - 2020-01-14" class="anchor" href="#0.0.1-alpha.2 - 2020-01-14"></a></h2><ul>\n<li>refactor: 修正 layout 默认值的断言</li>\n</ul>\n<h2 id="0.0.1-alpha.1 - 2020-01-10">0.0.1-alpha.1 - 2020-01-10<a name="0.0.1-alpha.1 - 2020-01-10" class="anchor" href="#0.0.1-alpha.1 - 2020-01-10"></a></h2><ul>\n<li>feat: 网站成功运行</li>\n<li>feat: run React demo</li>\n<li>feat: run Vue demo</li>\n<li>feat: 优化路由</li>\n<li>feat: 添加内置的 TS 配置</li>\n</ul>\n';a.default=[]},286:function(n,a,s){"use strict";s.r(a),s.d(a,"metadata",function(){return t}),s.d(a,"extra",function(){return e}),s.d(a,"html",function(){return o});const t={title:"demos"},e='\n\n<h2 id="上述效果对应的 Markdown">上述效果对应的 Markdown<a name="上述效果对应的 Markdown" class="anchor" href="#上述效果对应的 Markdown"></a></h2><pre class="language-"><code>## tsx\n\n默认导出并渲染了一个 React 组件。\n\n```tsx\nimport { Button } from &#39;antd&#39;;\n\nexport default (\n  &lt;Button onClick={() =&gt; alert(&#39;You, clicked me!&#39;)}&gt;tsx demo&lt;/Button&gt;\n);\n```\n\n## no default export\n\n没有默认导出，但执行了代码，可在控制台查看日志。\n\n```tsx\nconst x = &lt;div&gt;tsx demo&lt;/div&gt;;\nconsole.log(&#39;来自 demo 的日志&#39;, x);\n```\n\n## vue\n\n默认导出并渲染了一个 Vue 组件，确切地说是一颗 Vue 树。\n\n```ts\nexport default {\n  name: &#39;vueDemo&#39;,\n  data() {\n    return {\n      count: 1,\n    };\n  },\n};\n```\n\n```html\n&lt;template&gt;\n  &lt;div&gt;\n    count: {{count}}\n    &lt;br /&gt;\n    &lt;button @click=&quot;count++&quot;&gt;click to add&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;style lang=&quot;less&quot; scoped&gt;\n  button {\n    padding: 10px;\n    color: green;\n    outline: 0;\n  }\n&lt;/style&gt;\n```</code></pre>',o='<h2 id="tsx">tsx<a name="tsx" class="anchor" href="#tsx"></a></h2><p>默认导出并渲染了一个 React 组件。</p>\n<pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">\'You, clicked me!\'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>tsx demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="no default export">no default export<a name="no default export" class="anchor" href="#no default export"></a></h2><p>没有默认导出，但执行了代码，可在控制台查看日志。</p>\n<pre class="language-tsx"><code><span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>tsx demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'来自 demo 的日志\'</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="vue">vue<a name="vue" class="anchor" href="#vue"></a></h2><p>默认导出并渲染了一个 Vue 组件，确切地说是一颗 Vue 树。</p>\n<pre class="language-ts"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'vueDemo\'</span><span class="token punctuation">,</span>\n  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      count<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    count: {{count}}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count++<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>click to add<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">\n  <span class="token selector">button</span> <span class="token punctuation">{</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>\n\n<h2 id="上述效果对应的 Markdown">上述效果对应的 Markdown<a name="上述效果对应的 Markdown" class="anchor" href="#上述效果对应的 Markdown"></a></h2><pre class="language-"><code>## tsx\n\n默认导出并渲染了一个 React 组件。\n\n```tsx\nimport { Button } from &#39;antd&#39;;\n\nexport default (\n  &lt;Button onClick={() =&gt; alert(&#39;You, clicked me!&#39;)}&gt;tsx demo&lt;/Button&gt;\n);\n```\n\n## no default export\n\n没有默认导出，但执行了代码，可在控制台查看日志。\n\n```tsx\nconst x = &lt;div&gt;tsx demo&lt;/div&gt;;\nconsole.log(&#39;来自 demo 的日志&#39;, x);\n```\n\n## vue\n\n默认导出并渲染了一个 Vue 组件，确切地说是一颗 Vue 树。\n\n```ts\nexport default {\n  name: &#39;vueDemo&#39;,\n  data() {\n    return {\n      count: 1,\n    };\n  },\n};\n```\n\n```html\n&lt;template&gt;\n  &lt;div&gt;\n    count: {{count}}\n    &lt;br /&gt;\n    &lt;button @click=&quot;count++&quot;&gt;click to add&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n&lt;style lang=&quot;less&quot; scoped&gt;\n  button {\n    padding: 10px;\n    color: green;\n    outline: 0;\n  }\n&lt;/style&gt;\n```</code></pre>';a.default=[{title:"tsx",code:"import { Button } from 'antd';\n\nexport default (\n  <Button onClick={() => alert('You, clicked me!')}>tsx demo</Button>\n);",codeHtml:'<pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&apos;antd&apos;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&apos;You, clicked me!&apos;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span>tsx demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>',description:"<p>&#x9ED8;&#x8BA4;&#x5BFC;&#x51FA;&#x5E76;&#x6E32;&#x67D3;&#x4E86;&#x4E00;&#x4E2A; React &#x7EC4;&#x4EF6;&#x3002;</p>",demoType:"TSX",module:s(287)},{title:"no default export",code:"const x = <div>tsx demo</div>;\nconsole.log('来自 demo 的日志', x);",codeHtml:'<pre class="language-tsx"><code><span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>tsx demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span>\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&apos;&#x6765;&#x81EA; demo &#x7684;&#x65E5;&#x5FD7;&apos;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>',description:"<p>&#x6CA1;&#x6709;&#x9ED8;&#x8BA4;&#x5BFC;&#x51FA;&#xFF0C;&#x4F46;&#x6267;&#x884C;&#x4E86;&#x4EE3;&#x7801;&#xFF0C;&#x53EF;&#x5728;&#x63A7;&#x5236;&#x53F0;&#x67E5;&#x770B;&#x65E5;&#x5FD7;&#x3002;</p>",demoType:"TSX",module:s(358)},{title:"vue",code:'<script lang="ts">\nexport default {\n  name: \'vueDemo\',\n  data() {\n    return {\n      count: 1,\n    };\n  },\n};\n<\/script>\n<template>\n  <div>\n    count: {{count}}\n    <br />\n    <button @click="count++">click to add</button>\n  </div>\n</template>\n<style lang="less" scoped>\n  button {\n    padding: 10px;\n    color: green;\n    outline: 0;\n  }\n</style>',codeHtml:'<pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  name<span class="token punctuation">:</span> <span class="token string">\'vueDemo\'</span><span class="token punctuation">,</span>\n  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      count<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    count: {{count}}\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>count++<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>click to add<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">\n  <span class="token selector">button</span> <span class="token punctuation">{</span>\n    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>\n    <span class="token property">outline</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>',description:"<p>&#x9ED8;&#x8BA4;&#x5BFC;&#x51FA;&#x5E76;&#x6E32;&#x67D3;&#x4E86;&#x4E00;&#x4E2A; Vue &#x7EC4;&#x4EF6;&#xFF0C;&#x786E;&#x5207;&#x5730;&#x8BF4;&#x662F;&#x4E00;&#x9897; Vue &#x6811;&#x3002;</p>",demoType:"VUE",module:s(440)}]},287:function(n,a,s){"use strict";s.r(a);var t=s(36),e=s.n(t);s(47);a.default=React.createElement(e.a,{onClick:()=>alert("You, clicked me!")},"tsx demo")},344:function(n,a,s){var t={"./af":116,"./af.js":116,"./ar":117,"./ar-dz":118,"./ar-dz.js":118,"./ar-kw":119,"./ar-kw.js":119,"./ar-ly":120,"./ar-ly.js":120,"./ar-ma":121,"./ar-ma.js":121,"./ar-sa":122,"./ar-sa.js":122,"./ar-tn":123,"./ar-tn.js":123,"./ar.js":117,"./az":124,"./az.js":124,"./be":125,"./be.js":125,"./bg":126,"./bg.js":126,"./bm":127,"./bm.js":127,"./bn":128,"./bn.js":128,"./bo":129,"./bo.js":129,"./br":130,"./br.js":130,"./bs":131,"./bs.js":131,"./ca":132,"./ca.js":132,"./cs":133,"./cs.js":133,"./cv":134,"./cv.js":134,"./cy":135,"./cy.js":135,"./da":136,"./da.js":136,"./de":137,"./de-at":138,"./de-at.js":138,"./de-ch":139,"./de-ch.js":139,"./de.js":137,"./dv":140,"./dv.js":140,"./el":141,"./el.js":141,"./en-SG":142,"./en-SG.js":142,"./en-au":143,"./en-au.js":143,"./en-ca":144,"./en-ca.js":144,"./en-gb":145,"./en-gb.js":145,"./en-ie":146,"./en-ie.js":146,"./en-il":147,"./en-il.js":147,"./en-nz":148,"./en-nz.js":148,"./eo":149,"./eo.js":149,"./es":150,"./es-do":151,"./es-do.js":151,"./es-us":152,"./es-us.js":152,"./es.js":150,"./et":153,"./et.js":153,"./eu":154,"./eu.js":154,"./fa":155,"./fa.js":155,"./fi":156,"./fi.js":156,"./fo":157,"./fo.js":157,"./fr":158,"./fr-ca":159,"./fr-ca.js":159,"./fr-ch":160,"./fr-ch.js":160,"./fr.js":158,"./fy":161,"./fy.js":161,"./ga":162,"./ga.js":162,"./gd":163,"./gd.js":163,"./gl":164,"./gl.js":164,"./gom-latn":165,"./gom-latn.js":165,"./gu":166,"./gu.js":166,"./he":167,"./he.js":167,"./hi":168,"./hi.js":168,"./hr":169,"./hr.js":169,"./hu":170,"./hu.js":170,"./hy-am":171,"./hy-am.js":171,"./id":172,"./id.js":172,"./is":173,"./is.js":173,"./it":174,"./it-ch":175,"./it-ch.js":175,"./it.js":174,"./ja":176,"./ja.js":176,"./jv":177,"./jv.js":177,"./ka":178,"./ka.js":178,"./kk":179,"./kk.js":179,"./km":180,"./km.js":180,"./kn":181,"./kn.js":181,"./ko":182,"./ko.js":182,"./ku":183,"./ku.js":183,"./ky":184,"./ky.js":184,"./lb":185,"./lb.js":185,"./lo":186,"./lo.js":186,"./lt":187,"./lt.js":187,"./lv":188,"./lv.js":188,"./me":189,"./me.js":189,"./mi":190,"./mi.js":190,"./mk":191,"./mk.js":191,"./ml":192,"./ml.js":192,"./mn":193,"./mn.js":193,"./mr":194,"./mr.js":194,"./ms":195,"./ms-my":196,"./ms-my.js":196,"./ms.js":195,"./mt":197,"./mt.js":197,"./my":198,"./my.js":198,"./nb":199,"./nb.js":199,"./ne":200,"./ne.js":200,"./nl":201,"./nl-be":202,"./nl-be.js":202,"./nl.js":201,"./nn":203,"./nn.js":203,"./pa-in":204,"./pa-in.js":204,"./pl":205,"./pl.js":205,"./pt":206,"./pt-br":207,"./pt-br.js":207,"./pt.js":206,"./ro":208,"./ro.js":208,"./ru":209,"./ru.js":209,"./sd":210,"./sd.js":210,"./se":211,"./se.js":211,"./si":212,"./si.js":212,"./sk":213,"./sk.js":213,"./sl":214,"./sl.js":214,"./sq":215,"./sq.js":215,"./sr":216,"./sr-cyrl":217,"./sr-cyrl.js":217,"./sr.js":216,"./ss":218,"./ss.js":218,"./sv":219,"./sv.js":219,"./sw":220,"./sw.js":220,"./ta":221,"./ta.js":221,"./te":222,"./te.js":222,"./tet":223,"./tet.js":223,"./tg":224,"./tg.js":224,"./th":225,"./th.js":225,"./tl-ph":226,"./tl-ph.js":226,"./tlh":227,"./tlh.js":227,"./tr":228,"./tr.js":228,"./tzl":229,"./tzl.js":229,"./tzm":230,"./tzm-latn":231,"./tzm-latn.js":231,"./tzm.js":230,"./ug-cn":232,"./ug-cn.js":232,"./uk":233,"./uk.js":233,"./ur":234,"./ur.js":234,"./uz":235,"./uz-latn":236,"./uz-latn.js":236,"./uz.js":235,"./vi":237,"./vi.js":237,"./x-pseudo":238,"./x-pseudo.js":238,"./yo":239,"./yo.js":239,"./zh-cn":88,"./zh-cn.js":88,"./zh-hk":240,"./zh-hk.js":240,"./zh-tw":241,"./zh-tw.js":241};function e(n){var a=o(n);return s(a)}function o(n){var a=t[n];if(!(a+1)){var s=new Error("Cannot find module '"+n+"'");throw s.code="MODULE_NOT_FOUND",s}return a}e.keys=function(){return Object.keys(t)},e.resolve=o,n.exports=e,e.id=344},358:function(n,a,s){"use strict";const t=React.createElement("div",null,"tsx demo");console.log("来自 demo 的日志",t)},359:function(n,a,s){"use strict";var t=s(66);s.n(t).a},360:function(n,a,s){"use strict";s.r(a),s.d(a,"metadata",function(){return t}),s.d(a,"extra",function(){return e}),s.d(a,"html",function(){return o});const t={title:"README"},e='\n\n<h1 id="jugg-plugin-doc">jugg-plugin-doc<a name="jugg-plugin-doc" class="anchor" href="#jugg-plugin-doc"></a></h1><p>插件。</p>\n<p>用于方便快速地构建一个文档网站，有以下特点：</p>\n<ul>\n<li>主题风格来源于 <a href="https://ant.design/index-cn">Ant Design</a>。</li>\n<li>基于 React、antd 编写</li>\n<li>可在 Markdown 中运行代码块，支持<ul>\n<li>普通的代码块</li>\n<li>渲染 React 组件</li>\n<li>渲染 Vue 组件</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>功能还在完善中...</p>\n</blockquote>\n<h2 id="使用">使用<a name="使用" class="anchor" href="#使用"></a></h2><p>在配置文件中添加插件。</p>\n<pre class="language-ts"><code><span class="token comment">// .juggrc.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> extendConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@axew/jugg\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">extendConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">\'@axew/jugg-plugin-doc\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        source<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          docs<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'README.md\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token comment">// 如果有涉及 Vue demo 的渲染，请添加对应的 vue 插件</span>\n    <span class="token string">\'@axew/jugg-plugin-vue\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>启动服务</p>\n<pre class="language-bash"><code>$ jugg doc --dev</code></pre><p>打包文档网站</p>\n<pre class="language-bash"><code>$ jugg doc --build</code></pre><h2 id="配置">配置<a name="配置" class="anchor" href="#配置"></a></h2><p>配置项类型定义。</p>\n<pre class="language-ts"><code><span class="token keyword">interface</span> <span class="token class-name">IOptions</span> <span class="token punctuation">{</span>\n  source<span class="token operator">?</span><span class="token punctuation">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">;</span>\n  title<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  description<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre><h3 id="source">source<a name="source" class="anchor" href="#source"></a></h3><p>默认基于当前工作路径去寻找文件，支持 <code>glob</code> 匹配模式。该项中，<code>docs</code> 目前作为一个略微特殊的字段，在该字段中配置的文件届时会在一级菜单中展开。</p>\n<pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">"source"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"docs"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"README.md"</span><span class="token punctuation">,</span> <span class="token string">"docs/**/*.md"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token property">"item1"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"item1/**/*.md"</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre><h2 id="Notice">Notice<a name="Notice" class="anchor" href="#Notice"></a></h2><h3 id="基于 TS 进行编译">基于 TS 进行编译<a name="基于 TS 进行编译" class="anchor" href="#基于 TS 进行编译"></a></h3><p>当工作路径下不存在 TS 配置文件或者<strong>存在一份名为 <code>tsconfig.json</code> 时</strong>，此时都会选择加载一份内置的文件 <code>jugg-plugin-doc/site/tsconfig.doc.json</code>。</p>\n',o='\n\n<h1 id="jugg-plugin-doc">jugg-plugin-doc<a name="jugg-plugin-doc" class="anchor" href="#jugg-plugin-doc"></a></h1><p>插件。</p>\n<p>用于方便快速地构建一个文档网站，有以下特点：</p>\n<ul>\n<li>主题风格来源于 <a href="https://ant.design/index-cn">Ant Design</a>。</li>\n<li>基于 React、antd 编写</li>\n<li>可在 Markdown 中运行代码块，支持<ul>\n<li>普通的代码块</li>\n<li>渲染 React 组件</li>\n<li>渲染 Vue 组件</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>功能还在完善中...</p>\n</blockquote>\n<h2 id="使用">使用<a name="使用" class="anchor" href="#使用"></a></h2><p>在配置文件中添加插件。</p>\n<pre class="language-ts"><code><span class="token comment">// .juggrc.js</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> extendConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@axew/jugg\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">extendConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">\'@axew/jugg-plugin-doc\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        source<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n          docs<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'README.md\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token comment">// 如果有涉及 Vue demo 的渲染，请添加对应的 vue 插件</span>\n    <span class="token string">\'@axew/jugg-plugin-vue\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>启动服务</p>\n<pre class="language-bash"><code>$ jugg doc --dev</code></pre><p>打包文档网站</p>\n<pre class="language-bash"><code>$ jugg doc --build</code></pre><h2 id="配置">配置<a name="配置" class="anchor" href="#配置"></a></h2><p>配置项类型定义。</p>\n<pre class="language-ts"><code><span class="token keyword">interface</span> <span class="token class-name">IOptions</span> <span class="token punctuation">{</span>\n  source<span class="token operator">?</span><span class="token punctuation">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">;</span>\n  title<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  description<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre><h3 id="source">source<a name="source" class="anchor" href="#source"></a></h3><p>默认基于当前工作路径去寻找文件，支持 <code>glob</code> 匹配模式。该项中，<code>docs</code> 目前作为一个略微特殊的字段，在该字段中配置的文件届时会在一级菜单中展开。</p>\n<pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">"source"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"docs"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"README.md"</span><span class="token punctuation">,</span> <span class="token string">"docs/**/*.md"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token property">"item1"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"item1/**/*.md"</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre><h2 id="Notice">Notice<a name="Notice" class="anchor" href="#Notice"></a></h2><h3 id="基于 TS 进行编译">基于 TS 进行编译<a name="基于 TS 进行编译" class="anchor" href="#基于 TS 进行编译"></a></h3><p>当工作路径下不存在 TS 配置文件或者<strong>存在一份名为 <code>tsconfig.json</code> 时</strong>，此时都会选择加载一份内置的文件 <code>jugg-plugin-doc/site/tsconfig.doc.json</code>。</p>\n';a.default=[]},361:function(n,a,s){"use strict";s.r(a),s.d(a,"metadata",function(){return t}),s.d(a,"extra",function(){return e}),s.d(a,"html",function(){return o});const t={title:"✍️ Markdown 书写规则",layout:"article"},e='\n\n<p>一份可行的 markdown 文件模板可参考如下，每一份 markdown 文件会被渲染成一个菜单页面。</p>\n<pre class="language-md"><code><span class="token hr punctuation">---</span>\ntitle: 文档指南\norder: -2\n<span class="token title important">cols: 1\n<span class="token punctuation">---</span></span>\n\n<span class="token title important"><span class="token punctuation">##</span> demo 标题</span>\n\ndemo 的一些描述。\n\n<span class="token code"><span class="token punctuation">```</span><span class="token code-language">tsx</span>\n<span class="token code-block">import * as React from \'react\';\n\nexport default &lt;div>demo 1 运行效果&lt;/div>;</span>\n<span class="token punctuation">```</span></span>\n\n<span class="token title important"><span class="token punctuation">##</span> demo2 标题</span>\n\ndemo2 的一些描述。\n\n<span class="token code"><span class="token punctuation">```</span><span class="token code-language">tsx</span>\n<span class="token code-block">import * as React from \'react\';\n\nconst x = (\n  &lt;div>demo 2 没有默认导出，只展示代码片段，但此处代码块依旧会被执行。&lt;/div>\n);</span>\n<span class="token punctuation">```</span></span>\n\n<span class="token comment">&lt;!-- more --\x3e</span>\n\n<span class="token title important"><span class="token punctuation">##</span> API</span>\n\n其他内容。</code></pre><p>这样的 Markdown 可分成三部分来介绍。</p>\n<h3 id="元数据（配置项）">元数据（配置项）<a name="元数据（配置项）" class="anchor" href="#元数据（配置项）"></a></h3><p>文件顶部如下形式的内容即配置项部分。</p>\n<pre class="language-md"><code><span class="token hr punctuation">---</span>\ntitle: 文档指南\norder: -2\n<span class="token title important">cols: 1\n<span class="token punctuation">---</span></span></code></pre><p>字段说明：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>title</td>\n<td>会被用于生成 title</td>\n<td>string</td>\n<td>文件名</td>\n</tr>\n<tr>\n<td>cols</td>\n<td>demo 排布规则</td>\n<td>1 | 2</td>\n<td>2</td>\n</tr>\n<tr>\n<td>order</td>\n<td>排序值，值越小，位置越前</td>\n<td>-</td>\n<td>999</td>\n</tr>\n<tr>\n<td>layout</td>\n<td>布局，配置文件中 <code>docs</code> 下的使用 <code>article</code>，其他使用 <code>demo</code>。<code>README</code>、<code>CHANGELOG</code> 自动使用 <code>article</code></td>\n<td><code>article</code> | <code>demo</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>timeline</td>\n<td>时间轴布局，仅在 <code>article</code> 布局中生效，文件名为 <code>CHANGELOG</code> 时自动开启</td>\n<td>boolean</td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>layout 的区别：</p>\n<ul>\n<li><code>article</code>：不会展示代码块</li>\n<li><code>demo</code>：会展示代码块</li>\n</ul>\n<p>当不显示地设置 layout 时，layout 的逻辑：</p>\n<ul>\n<li>当页面处于一级菜单页，即路径为 <code>/docs/xxx</code> 时，认为是 <code>article</code></li>\n<li>Markdown 名称为 README 时，认为是 <code>article</code></li>\n<li>其他情况认为是 <code>demo</code></li>\n</ul>\n</blockquote>\n<h3 id="被 <code>&lt;!-- more --&gt;</code> 分隔的 <code>代码解析区域</code>">被 <code>&lt;!-- more --&gt;</code> 分隔的 <code>代码解析区域</code><a name="被 <code>&lt;!-- more --&gt;</code> 分隔的 <code>代码解析区域</code>" class="anchor" href="#被 <code>&lt;!-- more --&gt;</code> 分隔的 <code>代码解析区域</code>"></a></h3><p><code>&lt;!-- more --&gt;</code> 会将 Markdown 分成两块，第一块作为代码解析块。</p>\n<p>注意点：</p>\n<ul>\n<li>不符合解析规则的部分会被直接忽略跳过，满足以下的会被解析成 demo：<ul>\n<li>每一个 demo 块由 <code>##</code> 标题开始</li>\n<li><code>##</code> 紧跟一个 <code>代码块</code>，而且这个代码块需要是 <code>js</code>、<code>jsx</code>、<code>ts</code>、<code>tsx</code>，这两部分才会被解析到一个 demo<ul>\n<li>如果有 <code>默认导出</code>，则导出的内容会被作为 React 组件进行渲染</li>\n<li>没有默认导出，只展示代码块，不会有渲染效果，<strong>但代码块依旧会被执行</strong></li>\n</ul>\n</li>\n<li>在上述基础上，如果再紧跟一个 <code>html</code> 的代码块，那么这些内容会被整合成一个 Vue 的 demo 进行渲染</li>\n</ul>\n</li>\n<li>代码块默认导出的内容会被作为组件渲染，否则没有运行效果，只会展示代码片段</li>\n</ul>\n<pre class="language-md"><code><span class="token title important"><span class="token punctuation">##</span> demo 标题</span>\n\ndemo 的一些描述。\n\n<span class="token code"><span class="token punctuation">```</span><span class="token code-language">tsx</span>\n<span class="token code-block">import * as React from \'react\';\n\nexport default &lt;div>demo 1 运行效果&lt;/div>;</span>\n<span class="token punctuation">```</span></span>\n\n<span class="token title important"><span class="token punctuation">##</span> demo2 标题</span>\n\ndemo2 的一些描述。\n\n<span class="token code"><span class="token punctuation">```</span><span class="token code-language">tsx</span>\n<span class="token code-block">import * as React from \'react\';\n\nconst x = &lt;div>demo 2 没有默认导出，只展示代码片段&lt;/div>;</span>\n<span class="token punctuation">```</span></span>\n\n<span class="token title important"><span class="token punctuation">##</span> 渲染一个 Vue 组件</span>\n\n<span class="token code"><span class="token punctuation">```</span><span class="token code-language">ts</span>\n<span class="token code-block">// 脚本部分\nexport default {\n  name: \'vueDemo\',\n  data() {\n    return {\n      count: 1,\n    };\n  },\n};</span>\n<span class="token punctuation">```</span></span>\n\n<span class="token code"><span class="token punctuation">```</span><span class="token code-language">html</span>\n<span class="token code-block">&lt;!-- 模板部分 --\x3e\n&lt;template>\n  &lt;div>\n    count: {{count}}\n    &lt;br />\n    &lt;button @click="count++">click to add&lt;/button>\n  &lt;/div>\n&lt;/template>\n&lt;style lang="less" scoped>\n  button {\n    padding: 10px;\n    color: green;\n    outline: 0;\n  }\n&lt;/style></span>\n<span class="token punctuation">```</span></span></code></pre><h3 id="<code>&lt;!-- more --&gt;</code> 分隔后剩余的部分"><code>&lt;!-- more --&gt;</code> 分隔后剩余的部分<a name="<code>&lt;!-- more --&gt;</code> 分隔后剩余的部分" class="anchor" href="#<code>&lt;!-- more --&gt;</code> 分隔后剩余的部分"></a></h3><p>这部分只会原样被解析到 HTML 再渲染出来，用于编写额外内容。</p>\n<h2 id="🐛 目前已知的问题">🐛 目前已知的问题<a name="🐛 目前已知的问题" class="anchor" href="#🐛 目前已知的问题"></a></h2><ul>\n<li><input disabled="" type="checkbox"> 代码块中不能引用路径以 <code>.</code> 开头的资源，如 <code>import &#39;./a&#39;</code>、<code>import &#39;../x&#39;</code>。</li>\n</ul>\n',o='\n\n<p>一份可行的 markdown 文件模板可参考如下，每一份 markdown 文件会被渲染成一个菜单页面。</p>\n<pre class="language-md"><code><span class="token hr punctuation">---</span>\ntitle: 文档指南\norder: -2\n<span class="token title important">cols: 1\n<span class="token punctuation">---</span></span>\n\n<span class="token title important"><span class="token punctuation">##</span> demo 标题</span>\n\ndemo 的一些描述。\n\n<span class="token code"><span class="token punctuation">```</span><span class="token code-language">tsx</span>\n<span class="token code-block">import * as React from \'react\';\n\nexport default &lt;div>demo 1 运行效果&lt;/div>;</span>\n<span class="token punctuation">```</span></span>\n\n<span class="token title important"><span class="token punctuation">##</span> demo2 标题</span>\n\ndemo2 的一些描述。\n\n<span class="token code"><span class="token punctuation">```</span><span class="token code-language">tsx</span>\n<span class="token code-block">import * as React from \'react\';\n\nconst x = (\n  &lt;div>demo 2 没有默认导出，只展示代码片段，但此处代码块依旧会被执行。&lt;/div>\n);</span>\n<span class="token punctuation">```</span></span>\n\n<span class="token comment">&lt;!-- more --\x3e</span>\n\n<span class="token title important"><span class="token punctuation">##</span> API</span>\n\n其他内容。</code></pre><p>这样的 Markdown 可分成三部分来介绍。</p>\n<h3 id="元数据（配置项）">元数据（配置项）<a name="元数据（配置项）" class="anchor" href="#元数据（配置项）"></a></h3><p>文件顶部如下形式的内容即配置项部分。</p>\n<pre class="language-md"><code><span class="token hr punctuation">---</span>\ntitle: 文档指南\norder: -2\n<span class="token title important">cols: 1\n<span class="token punctuation">---</span></span></code></pre><p>字段说明：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>title</td>\n<td>会被用于生成 title</td>\n<td>string</td>\n<td>文件名</td>\n</tr>\n<tr>\n<td>cols</td>\n<td>demo 排布规则</td>\n<td>1 | 2</td>\n<td>2</td>\n</tr>\n<tr>\n<td>order</td>\n<td>排序值，值越小，位置越前</td>\n<td>-</td>\n<td>999</td>\n</tr>\n<tr>\n<td>layout</td>\n<td>布局，配置文件中 <code>docs</code> 下的使用 <code>article</code>，其他使用 <code>demo</code>。<code>README</code>、<code>CHANGELOG</code> 自动使用 <code>article</code></td>\n<td><code>article</code> | <code>demo</code></td>\n<td>-</td>\n</tr>\n<tr>\n<td>timeline</td>\n<td>时间轴布局，仅在 <code>article</code> 布局中生效，文件名为 <code>CHANGELOG</code> 时自动开启</td>\n<td>boolean</td>\n<td><code>false</code></td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>layout 的区别：</p>\n<ul>\n<li><code>article</code>：不会展示代码块</li>\n<li><code>demo</code>：会展示代码块</li>\n</ul>\n<p>当不显示地设置 layout 时，layout 的逻辑：</p>\n<ul>\n<li>当页面处于一级菜单页，即路径为 <code>/docs/xxx</code> 时，认为是 <code>article</code></li>\n<li>Markdown 名称为 README 时，认为是 <code>article</code></li>\n<li>其他情况认为是 <code>demo</code></li>\n</ul>\n</blockquote>\n<h3 id="被 <code>&lt;!-- more --&gt;</code> 分隔的 <code>代码解析区域</code>">被 <code>&lt;!-- more --&gt;</code> 分隔的 <code>代码解析区域</code><a name="被 <code>&lt;!-- more --&gt;</code> 分隔的 <code>代码解析区域</code>" class="anchor" href="#被 <code>&lt;!-- more --&gt;</code> 分隔的 <code>代码解析区域</code>"></a></h3><p><code>&lt;!-- more --&gt;</code> 会将 Markdown 分成两块，第一块作为代码解析块。</p>\n<p>注意点：</p>\n<ul>\n<li>不符合解析规则的部分会被直接忽略跳过，满足以下的会被解析成 demo：<ul>\n<li>每一个 demo 块由 <code>##</code> 标题开始</li>\n<li><code>##</code> 紧跟一个 <code>代码块</code>，而且这个代码块需要是 <code>js</code>、<code>jsx</code>、<code>ts</code>、<code>tsx</code>，这两部分才会被解析到一个 demo<ul>\n<li>如果有 <code>默认导出</code>，则导出的内容会被作为 React 组件进行渲染</li>\n<li>没有默认导出，只展示代码块，不会有渲染效果，<strong>但代码块依旧会被执行</strong></li>\n</ul>\n</li>\n<li>在上述基础上，如果再紧跟一个 <code>html</code> 的代码块，那么这些内容会被整合成一个 Vue 的 demo 进行渲染</li>\n</ul>\n</li>\n<li>代码块默认导出的内容会被作为组件渲染，否则没有运行效果，只会展示代码片段</li>\n</ul>\n<pre class="language-md"><code><span class="token title important"><span class="token punctuation">##</span> demo 标题</span>\n\ndemo 的一些描述。\n\n<span class="token code"><span class="token punctuation">```</span><span class="token code-language">tsx</span>\n<span class="token code-block">import * as React from \'react\';\n\nexport default &lt;div>demo 1 运行效果&lt;/div>;</span>\n<span class="token punctuation">```</span></span>\n\n<span class="token title important"><span class="token punctuation">##</span> demo2 标题</span>\n\ndemo2 的一些描述。\n\n<span class="token code"><span class="token punctuation">```</span><span class="token code-language">tsx</span>\n<span class="token code-block">import * as React from \'react\';\n\nconst x = &lt;div>demo 2 没有默认导出，只展示代码片段&lt;/div>;</span>\n<span class="token punctuation">```</span></span>\n\n<span class="token title important"><span class="token punctuation">##</span> 渲染一个 Vue 组件</span>\n\n<span class="token code"><span class="token punctuation">```</span><span class="token code-language">ts</span>\n<span class="token code-block">// 脚本部分\nexport default {\n  name: \'vueDemo\',\n  data() {\n    return {\n      count: 1,\n    };\n  },\n};</span>\n<span class="token punctuation">```</span></span>\n\n<span class="token code"><span class="token punctuation">```</span><span class="token code-language">html</span>\n<span class="token code-block">&lt;!-- 模板部分 --\x3e\n&lt;template>\n  &lt;div>\n    count: {{count}}\n    &lt;br />\n    &lt;button @click="count++">click to add&lt;/button>\n  &lt;/div>\n&lt;/template>\n&lt;style lang="less" scoped>\n  button {\n    padding: 10px;\n    color: green;\n    outline: 0;\n  }\n&lt;/style></span>\n<span class="token punctuation">```</span></span></code></pre><h3 id="<code>&lt;!-- more --&gt;</code> 分隔后剩余的部分"><code>&lt;!-- more --&gt;</code> 分隔后剩余的部分<a name="<code>&lt;!-- more --&gt;</code> 分隔后剩余的部分" class="anchor" href="#<code>&lt;!-- more --&gt;</code> 分隔后剩余的部分"></a></h3><p>这部分只会原样被解析到 HTML 再渲染出来，用于编写额外内容。</p>\n<h2 id="🐛 目前已知的问题">🐛 目前已知的问题<a name="🐛 目前已知的问题" class="anchor" href="#🐛 目前已知的问题"></a></h2><ul>\n<li><input disabled="" type="checkbox"> 代码块中不能引用路径以 <code>.</code> 开头的资源，如 <code>import &#39;./a&#39;</code>、<code>import &#39;../x&#39;</code>。</li>\n</ul>\n';a.default=[]},362:function(n,a,s){"use strict";s.r(a),s.d(a,"metadata",function(){return t}),s.d(a,"extra",function(){return e}),s.d(a,"html",function(){return o});const t={title:"CHANGELOG"},e='<h1 id="CHANGELOG">CHANGELOG<a name="CHANGELOG" class="anchor" href="#CHANGELOG"></a></h1><ul>\n<li><input disabled="" type="checkbox"> fix: 使用 <code>tsConvertImportFrom</code> 替换 import 模块的路径后，相应生成的类型文件不更新<ul>\n<li>如（见 ts-lib/src/vue-components/Button/index）：<code>import Button from &#39;./button.vue&#39;</code> =&gt; <code>import Button from &#39;./button.js&#39;</code>，类型文件中依旧是引用的 <code>.vue</code></li>\n</ul>\n</li>\n</ul>\n<h2 id="0.2.2-alpha.0 - 2019-11-25">0.2.2-alpha.0 - 2019-11-25<a name="0.2.2-alpha.0 - 2019-11-25" class="anchor" href="#0.2.2-alpha.0 - 2019-11-25"></a></h2><ul>\n<li>fix: 先将 vue 文件中的 script 部分使用 ts 进行处理，<code>.vue</code> 编译后的后缀改为 <code>js</code>（中间文件）</li>\n<li>fix: 当 <code>vue</code> 文件中使用 <code>vue-property-decorator</code> 时，编译结果会有依赖丢失的现象（重新处理了编译 vue 单组件文件的过程）</li>\n</ul>\n<h2 id="0.2.1 - 2019-11-13">0.2.1 - 2019-11-13<a name="0.2.1 - 2019-11-13" class="anchor" href="#0.2.1 - 2019-11-13"></a></h2><ul>\n<li>fix: <code>.vue</code> 文件中可能是 TS 代码，暂且将文件命名为 <code>tsx</code> 后缀（中间文件）</li>\n</ul>\n<h2 id="0.2.0 - 2019-11-11">0.2.0 - 2019-11-11<a name="0.2.0 - 2019-11-11" class="anchor" href="#0.2.0 - 2019-11-11"></a></h2><ul>\n<li>feat: 支持在插件内部配置 <code>tsCustomTransformers</code>，且当插件配置的 <code>tsCustomTransformers</code> 不存在时会去读取 <code>.juggrc</code> 中的 <code>tsCustomTransformers</code></li>\n<li>feat: 支持通过设置环境变量 <code>JUGG_TS_PROJECT</code> 以指定特定的 tsconfig.json</li>\n</ul>\n',o='<h1 id="CHANGELOG">CHANGELOG<a name="CHANGELOG" class="anchor" href="#CHANGELOG"></a></h1><ul>\n<li><input disabled="" type="checkbox"> fix: 使用 <code>tsConvertImportFrom</code> 替换 import 模块的路径后，相应生成的类型文件不更新<ul>\n<li>如（见 ts-lib/src/vue-components/Button/index）：<code>import Button from &#39;./button.vue&#39;</code> =&gt; <code>import Button from &#39;./button.js&#39;</code>，类型文件中依旧是引用的 <code>.vue</code></li>\n</ul>\n</li>\n</ul>\n<h2 id="0.2.2-alpha.0 - 2019-11-25">0.2.2-alpha.0 - 2019-11-25<a name="0.2.2-alpha.0 - 2019-11-25" class="anchor" href="#0.2.2-alpha.0 - 2019-11-25"></a></h2><ul>\n<li>fix: 先将 vue 文件中的 script 部分使用 ts 进行处理，<code>.vue</code> 编译后的后缀改为 <code>js</code>（中间文件）</li>\n<li>fix: 当 <code>vue</code> 文件中使用 <code>vue-property-decorator</code> 时，编译结果会有依赖丢失的现象（重新处理了编译 vue 单组件文件的过程）</li>\n</ul>\n<h2 id="0.2.1 - 2019-11-13">0.2.1 - 2019-11-13<a name="0.2.1 - 2019-11-13" class="anchor" href="#0.2.1 - 2019-11-13"></a></h2><ul>\n<li>fix: <code>.vue</code> 文件中可能是 TS 代码，暂且将文件命名为 <code>tsx</code> 后缀（中间文件）</li>\n</ul>\n<h2 id="0.2.0 - 2019-11-11">0.2.0 - 2019-11-11<a name="0.2.0 - 2019-11-11" class="anchor" href="#0.2.0 - 2019-11-11"></a></h2><ul>\n<li>feat: 支持在插件内部配置 <code>tsCustomTransformers</code>，且当插件配置的 <code>tsCustomTransformers</code> 不存在时会去读取 <code>.juggrc</code> 中的 <code>tsCustomTransformers</code></li>\n<li>feat: 支持通过设置环境变量 <code>JUGG_TS_PROJECT</code> 以指定特定的 tsconfig.json</li>\n</ul>\n';a.default=[]},363:function(n,a,s){"use strict";s.r(a),s.d(a,"metadata",function(){return t}),s.d(a,"extra",function(){return e}),s.d(a,"html",function(){return o});const t={title:"README"},e='<h1 id="jugg-plugin-lib">jugg-plugin-lib<a name="jugg-plugin-lib" class="anchor" href="#jugg-plugin-lib"></a></h1><p><a href="https://github.com/daief/jugg/tree/master/packages/jugg-plugin-lib"><img src="https://img.shields.io/npm/v/@axew/jugg-plugin-lib.svg?style=flat" alt=""></a></p>\n<p>Help to build npm library.\nMost of here reference <a href="http://github.com/ant-design/antd-tools">antd-tools</a>.</p>\n<h1 id="usage">usage<a name="usage" class="anchor" href="#usage"></a></h1><p><code>.juggrc.js</code>:</p>\n<pre class="language-js"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'@axew/jugg-plugin-lib\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>then you can use <code>lib</code> commond:</p>\n<pre class="language-bash"><code>$ jugg lib</code></pre><p>get <code>lib/</code> &amp; <code>es/</code> results form <code>src/</code>.</p>\n<h1 id="config">config<a name="config" class="anchor" href="#config"></a></h1><pre class="language-ts"><code><span class="token keyword">interface</span> <span class="token class-name">IOptions</span> <span class="token punctuation">{</span>\n <span class="token doc-comment comment"> /**\n   * convert less import in es/lib to css file path, default `true`\n   */</span>\n  convertLessImport2Css<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * copy file to dest with this suffix, built-in `png|jpg|jpeg|gif|webp|svg|mp4|webm|ogg|mp3|wav|flac|aac|woff|woff2|eot|ttf|otf`\n   * <span class="token keyword">@example</span> `md|html`\n   */</span>\n  copyFileSuffix<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * set source code dir, default contains `src`\n   */</span>\n  sourceDir<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre><h2 id="notice">notice<a name="notice" class="anchor" href="#notice"></a></h2><ul>\n<li><strong>All in TS</strong> is recommended. But also can work with JS source. But there will be no declaration files for js source.</li>\n<li>Use <code>.browserslistrc</code> config or <code>browserslist</code> key in package.json to share target browsers with Babel, ESLint and Stylelint. See <a href="https://github.com/browserslist/browserslist#queries">Browserslist docs</a> for available queries and default value.<pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// previous built-in config</span>\n  <span class="token property">"browserslist"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">"last 2 versions"</span><span class="token punctuation">,</span>\n    <span class="token string">"Firefox ESR"</span><span class="token punctuation">,</span>\n    <span class="token string">"> 1%"</span><span class="token punctuation">,</span>\n    <span class="token string">"ie >= 9"</span><span class="token punctuation">,</span>\n    <span class="token string">"iOS >= 8"</span><span class="token punctuation">,</span>\n    <span class="token string">"Android >= 4"</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre></li>\n</ul>\n',o='<h1 id="jugg-plugin-lib">jugg-plugin-lib<a name="jugg-plugin-lib" class="anchor" href="#jugg-plugin-lib"></a></h1><p><a href="https://github.com/daief/jugg/tree/master/packages/jugg-plugin-lib"><img src="https://img.shields.io/npm/v/@axew/jugg-plugin-lib.svg?style=flat" alt=""></a></p>\n<p>Help to build npm library.\nMost of here reference <a href="http://github.com/ant-design/antd-tools">antd-tools</a>.</p>\n<h1 id="usage">usage<a name="usage" class="anchor" href="#usage"></a></h1><p><code>.juggrc.js</code>:</p>\n<pre class="language-js"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'@axew/jugg-plugin-lib\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre><p>then you can use <code>lib</code> commond:</p>\n<pre class="language-bash"><code>$ jugg lib</code></pre><p>get <code>lib/</code> &amp; <code>es/</code> results form <code>src/</code>.</p>\n<h1 id="config">config<a name="config" class="anchor" href="#config"></a></h1><pre class="language-ts"><code><span class="token keyword">interface</span> <span class="token class-name">IOptions</span> <span class="token punctuation">{</span>\n <span class="token doc-comment comment"> /**\n   * convert less import in es/lib to css file path, default `true`\n   */</span>\n  convertLessImport2Css<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * copy file to dest with this suffix, built-in `png|jpg|jpeg|gif|webp|svg|mp4|webm|ogg|mp3|wav|flac|aac|woff|woff2|eot|ttf|otf`\n   * <span class="token keyword">@example</span> `md|html`\n   */</span>\n  copyFileSuffix<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n <span class="token doc-comment comment"> /**\n   * set source code dir, default contains `src`\n   */</span>\n  sourceDir<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre><h2 id="notice">notice<a name="notice" class="anchor" href="#notice"></a></h2><ul>\n<li><strong>All in TS</strong> is recommended. But also can work with JS source. But there will be no declaration files for js source.</li>\n<li>Use <code>.browserslistrc</code> config or <code>browserslist</code> key in package.json to share target browsers with Babel, ESLint and Stylelint. See <a href="https://github.com/browserslist/browserslist#queries">Browserslist docs</a> for available queries and default value.<pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token comment">// previous built-in config</span>\n  <span class="token property">"browserslist"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">"last 2 versions"</span><span class="token punctuation">,</span>\n    <span class="token string">"Firefox ESR"</span><span class="token punctuation">,</span>\n    <span class="token string">"> 1%"</span><span class="token punctuation">,</span>\n    <span class="token string">"ie >= 9"</span><span class="token punctuation">,</span>\n    <span class="token string">"iOS >= 8"</span><span class="token punctuation">,</span>\n    <span class="token string">"Android >= 4"</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre></li>\n</ul>\n';a.default=[]},364:function(n,a,s){"use strict";s.r(a),s.d(a,"metadata",function(){return t}),s.d(a,"extra",function(){return e}),s.d(a,"html",function(){return o});const t={title:"README"},e='<h1 id="jugg-plugin-multi-html">jugg-plugin-multi-html<a name="jugg-plugin-multi-html" class="anchor" href="#jugg-plugin-multi-html"></a></h1><p>Aim to generate multi html files with <code>routes</code> config, which is base on <code>html-webpack-plugin</code>.</p>\n<h1 id="config">config<a name="config" class="anchor" href="#config"></a></h1><pre class="language-ts"><code><span class="token keyword">interface</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>\n  routes<span class="token punctuation">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>\n    <span class="token comment">// route path</span>\n    path<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    <span class="token comment">// assign a specific template path, relative to the `src/`</span>\n    template<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><h1 id="example">example<a name="example" class="anchor" href="#example"></a></h1><pre class="language-js"><code><span class="token comment">// .juggrc.js</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">\'@axew/jugg-plugin-multi-html\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        routes<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            path<span class="token punctuation">:</span> <span class="token string">\'/user\'</span><span class="token punctuation">,</span>\n            template<span class="token punctuation">:</span> <span class="token string">\'./documents/user.ejs\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            path<span class="token punctuation">:</span> <span class="token string">\'/user/profile\'</span><span class="token punctuation">,</span>\n            template<span class="token punctuation">:</span> <span class="token string">\'./documents/profile.ejs\'</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre><p>After building.</p>\n<pre class="language-bash"><code><span class="token comment"># dist/</span>\n<span class="token builtin class-name">.</span>\n├── index.f4bf6a3f58833a69beb9.js\n├── index.html\n└── user\n    ├── index.html\n    └── profile\n        └── index.html</code></pre><h1 id="Notice">Notice<a name="Notice" class="anchor" href="#Notice"></a></h1><ul>\n<li>When publichPath is a relative path, assets path in html is not right.</li>\n</ul>\n',o='<h1 id="jugg-plugin-multi-html">jugg-plugin-multi-html<a name="jugg-plugin-multi-html" class="anchor" href="#jugg-plugin-multi-html"></a></h1><p>Aim to generate multi html files with <code>routes</code> config, which is base on <code>html-webpack-plugin</code>.</p>\n<h1 id="config">config<a name="config" class="anchor" href="#config"></a></h1><pre class="language-ts"><code><span class="token keyword">interface</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>\n  routes<span class="token punctuation">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token punctuation">{</span>\n    <span class="token comment">// route path</span>\n    path<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    <span class="token comment">// assign a specific template path, relative to the `src/`</span>\n    template<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><h1 id="example">example<a name="example" class="anchor" href="#example"></a></h1><pre class="language-js"><code><span class="token comment">// .juggrc.js</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span>\n      <span class="token string">\'@axew/jugg-plugin-multi-html\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        routes<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            path<span class="token punctuation">:</span> <span class="token string">\'/user\'</span><span class="token punctuation">,</span>\n            template<span class="token punctuation">:</span> <span class="token string">\'./documents/user.ejs\'</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            path<span class="token punctuation">:</span> <span class="token string">\'/user/profile\'</span><span class="token punctuation">,</span>\n            template<span class="token punctuation">:</span> <span class="token string">\'./documents/profile.ejs\'</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre><p>After building.</p>\n<pre class="language-bash"><code><span class="token comment"># dist/</span>\n<span class="token builtin class-name">.</span>\n├── index.f4bf6a3f58833a69beb9.js\n├── index.html\n└── user\n    ├── index.html\n    └── profile\n        └── index.html</code></pre><h1 id="Notice">Notice<a name="Notice" class="anchor" href="#Notice"></a></h1><ul>\n<li>When publichPath is a relative path, assets path in html is not right.</li>\n</ul>\n';a.default=[]},365:function(n,a,s){"use strict";s.r(a),s.d(a,"metadata",function(){return t}),s.d(a,"extra",function(){return e}),s.d(a,"html",function(){return o});const t={title:"README"},e='<h1 id="jugg-plugin-react">jugg-plugin-react<a name="jugg-plugin-react" class="anchor" href="#jugg-plugin-react"></a></h1><p>A set of babel config to support React.\nConfig of babel depending on <code>jugg-plugin-babel</code>.\nThere is also some config for RHL(react-hot-loader).</p>\n<h1 id="ts-rhl-transformer">ts-rhl-transformer<a name="ts-rhl-transformer" class="anchor" href="#ts-rhl-transformer"></a></h1><p>It&#39;s located at <code>@axew/jugg-plugin-react/lib/ts-rhl-transformer</code>. It is a TypeScript compiler transformer handling the most same as <code>react-hot-loader/babel</code> and working with ts-loader.</p>\n<h1 id="config">config<a name="config" class="anchor" href="#config"></a></h1><pre class="language-ts"><code><span class="token keyword">interface</span> <span class="token class-name">Options</span> <span class="token punctuation">{</span>\n  jReactPresetOption<span class="token operator">?</span><span class="token punctuation">:</span> JReactPresetOption<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">JReactPresetOption</span> <span class="token punctuation">{</span>\n  <span class="token comment">// use `babel-plugin-transform-react-remove-prop-types` ? default false</span>\n  removePropTypes<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  <span class="token comment">// use `babel-plugin-react-require` ? default false</span>\n  reactRequire<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><h1 id="react hot loader">react hot loader<a name="react hot loader" class="anchor" href="#react hot loader"></a></h1><p><a href="https://www.npmjs.com/package/react-hot-loader/v/4.6.3#getting-started">you should add code like this</a>:</p>\n<pre class="language-js"><code><span class="token comment">// App.js  root component</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> hot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-hot-loader/root\'</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">&lt;</span>div<span class="token operator">></span>Hello World<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">hot</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span></code></pre><h2 id="notice">notice<a name="notice" class="anchor" href="#notice"></a></h2><ul>\n<li>there are two ways to support hot reload friendly in TypeScript.<ul>\n<li>use ts transformer, for example in <code>.juggrc.js</code>. This plugin can be used independently, that means you can remove babel config only using ts-loader to handle ts, tsx, js and jsx:<pre class="language-js"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  tsCustomTransformers<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// add this</span>\n    before<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'@axew/jugg-plugin-react/lib/ts-rhl-transformer\'</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre></li>\n<li>change ts compiler to babel, set <code>compileTs: true</code> in <code>jugg-plugin-babel</code> config, which will use <code>react-hot-loader/babel</code>, <a href="https://www.npmjs.com/package/react-hot-loader/v/4.6.3#typescript">detail</a>.</li>\n</ul>\n</li>\n</ul>\n',o='<h1 id="jugg-plugin-react">jugg-plugin-react<a name="jugg-plugin-react" class="anchor" href="#jugg-plugin-react"></a></h1><p>A set of babel config to support React.\nConfig of babel depending on <code>jugg-plugin-babel</code>.\nThere is also some config for RHL(react-hot-loader).</p>\n<h1 id="ts-rhl-transformer">ts-rhl-transformer<a name="ts-rhl-transformer" class="anchor" href="#ts-rhl-transformer"></a></h1><p>It&#39;s located at <code>@axew/jugg-plugin-react/lib/ts-rhl-transformer</code>. It is a TypeScript compiler transformer handling the most same as <code>react-hot-loader/babel</code> and working with ts-loader.</p>\n<h1 id="config">config<a name="config" class="anchor" href="#config"></a></h1><pre class="language-ts"><code><span class="token keyword">interface</span> <span class="token class-name">Options</span> <span class="token punctuation">{</span>\n  jReactPresetOption<span class="token operator">?</span><span class="token punctuation">:</span> JReactPresetOption<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">JReactPresetOption</span> <span class="token punctuation">{</span>\n  <span class="token comment">// use `babel-plugin-transform-react-remove-prop-types` ? default false</span>\n  removePropTypes<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n  <span class="token comment">// use `babel-plugin-react-require` ? default false</span>\n  reactRequire<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><h1 id="react hot loader">react hot loader<a name="react hot loader" class="anchor" href="#react hot loader"></a></h1><p><a href="https://www.npmjs.com/package/react-hot-loader/v/4.6.3#getting-started">you should add code like this</a>:</p>\n<pre class="language-js"><code><span class="token comment">// App.js  root component</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> hot <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-hot-loader/root\'</span>\n<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token operator">&lt;</span>div<span class="token operator">></span>Hello World<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">hot</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span></code></pre><h2 id="notice">notice<a name="notice" class="anchor" href="#notice"></a></h2><ul>\n<li>there are two ways to support hot reload friendly in TypeScript.<ul>\n<li>use ts transformer, for example in <code>.juggrc.js</code>. This plugin can be used independently, that means you can remove babel config only using ts-loader to handle ts, tsx, js and jsx:<pre class="language-js"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  tsCustomTransformers<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// add this</span>\n    before<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">\'@axew/jugg-plugin-react/lib/ts-rhl-transformer\'</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre></li>\n<li>change ts compiler to babel, set <code>compileTs: true</code> in <code>jugg-plugin-babel</code> config, which will use <code>react-hot-loader/babel</code>, <a href="https://www.npmjs.com/package/react-hot-loader/v/4.6.3#typescript">detail</a>.</li>\n</ul>\n</li>\n</ul>\n';a.default=[]},366:function(n,a,s){"use strict";s.r(a),s.d(a,"metadata",function(){return t}),s.d(a,"extra",function(){return e}),s.d(a,"html",function(){return o});const t={title:"README"},e='<h1 id="jugg-plugin-vue">jugg-plugin-vue<a name="jugg-plugin-vue" class="anchor" href="#jugg-plugin-vue"></a></h1><p>Support Vue.</p>\n<h1 id="config">config<a name="config" class="anchor" href="#config"></a></h1><p>The same as the options of <code>vue-loader</code>.</p>\n',o='<h1 id="jugg-plugin-vue">jugg-plugin-vue<a name="jugg-plugin-vue" class="anchor" href="#jugg-plugin-vue"></a></h1><p>Support Vue.</p>\n<h1 id="config">config<a name="config" class="anchor" href="#config"></a></h1><p>The same as the options of <code>vue-loader</code>.</p>\n';a.default=[]},394:function(n,a,s){},439:function(n,a,s){"use strict";s.r(a);var t=s(0),e=s.n(t),o=s(5),p=s(13),c=s(30),l=s(254),i=s.n(l),u=s(44);Object(u.b)();const r={docs:{"README.md":s(281)},jugg:{"packages/jugg/CHANGELOG.md":s(282),"packages/jugg/README.md":s(283)},"jugg-plugin-babel":{"packages/jugg-plugin-babel/README.md":s(284)},"jugg-plugin-doc":{"packages/jugg-plugin-doc/CHANGELOG.md":s(285),"packages/jugg-plugin-doc/demos.md":s(286),"packages/jugg-plugin-doc/README.md":s(360),"packages/jugg-plugin-doc/writeRule.md":s(361)},"jugg-plugin-lib":{"packages/jugg-plugin-lib/CHANGELOG.md":s(362),"packages/jugg-plugin-lib/README.md":s(363)},"jugg-plugin-multi-html":{"packages/jugg-plugin-multi-html/README.md":s(364)},"jugg-plugin-react":{"packages/jugg-plugin-react/README.md":s(365)},"jugg-plugin-vue":{"packages/jugg-plugin-vue/README.md":s(366)}};var d=r;const k=new Map(i()(Object.keys(r).map(n=>{const a=r[n];return Object.keys(a).map(s=>{const t=a[s],{metadata:e}=t,{route:o}=e;return t.category=n,[`/${n}/${o||s}`.toLowerCase().replace(/.md$/i,""),t]})})));var m=s(31),g=s.n(m);s(242);const{SubMenu:h}=g.a,f=(n,a,{before:s=null,after:e=null})=>{const o=a.path,c=a.title,l=n?c:[t.createElement("span",{key:"english"},c),t.createElement("span",{className:"chinese",key:"chinese"},a.subTitle)],{disabled:i}=a,u=a.path;return t.createElement(g.a.Item,{key:o,disabled:i},t.createElement(p.c,{to:u,disabled:i},s,l,e))},b=Object(u.a)(d,k),x=((n={})=>b.map(a=>a.children?t.createElement(h,{title:t.createElement("h4",null,a.title),key:a.title},a.children.map(a=>f(!1,a,n))):f(!0,a,n)))(),j=n=>t.createElement(g.a,Object.assign({inlineIndent:40,className:"aside-container menu-site",mode:"inline"},n),x),w=t.createContext(null);function y(){return t.useContext(w)}const E=({children:n})=>{const a=t.useMemo(()=>({pageMap:k,markdown:d,menuData:b}),[]);return t.createElement(w.Provider,{value:a},n)};s(393),s(394);var v=s(29),C=s.n(v),S=(s(62),s(15)),A=s.n(S),N=(s(63),s(70)),T=s.n(N),M=(s(247),s(3)),O=s.n(M),R=s(265),D=s(46),_=s.n(D),L=s(98),P=s.n(L);s(398);function J(n){const{html:a=""}=n,[s,e]=t.useState(null);return t.useEffect(()=>{const n=[...(new DOMParser).parseFromString(a,"text/html").querySelectorAll("h1,h2,h3,h4,h5,h6")].map((n,a)=>{const s=(n.textContent||"").trim();return t.createElement("li",{key:s+a},t.createElement("a",{href:`#${s}`},s))});e(n)},[a]),t.createElement(T.a,{className:"toc-affix",offsetTop:16},t.createElement("ul",{id:"demo-toc",className:"toc"},s&&s.length?t.createElement("li",{style:{color:"red",wordBreak:"break-all",maxWidth:110}},"暂请不要点击，因为 hash 路由与锚点冲突"):null,s))}class B extends e.a.Component{componentDidMount(){this.componentDidUpdate()}componentDidUpdate(){document.querySelectorAll(".outside-link.internal")}componentWillUnmount(){}getArticle(){const{md:n,timeline:a}=this.props,{extra:s}=n;if(!a)return e.a.createElement("section",{className:"markdown api-container",dangerouslySetInnerHTML:{__html:s}});if("undefined"==typeof DOMParser)return e.a.createElement("section",{className:"markdown api-container"});const t=[],o=[];let p=1;return[...(new DOMParser).parseFromString(s,"text/html").body.children].forEach(n=>{"H2"===n.tagName&&n.nextElementSibling&&"UL"===n.nextElementSibling.tagName?(t.push(e.a.createElement(P.a.Item,{key:p},e.a.createElement("div",{dangerouslySetInnerHTML:{__html:n.outerHTML+n.nextElementSibling.outerHTML}}))),p+=1):1===p&&o.push(n.outerHTML)}),e.a.createElement("section",{className:"markdown api-container"},e.a.createElement("div",{dangerouslySetInnerHTML:{__html:o.join(" ")}}),e.a.createElement(P.a,{className:"changelog-timeline"},t))}render(){const{props:n}=this,{md:a}=n,{metadata:s,description:t}=a,{title:o,subtitle:p}=s;return e.a.createElement(_.a,{title:`${o} - Jugg`},e.a.createElement(e.a.Fragment,null,e.a.createElement(J,{html:a.html}),e.a.createElement("article",{className:"markdown",ref:n=>{this.node=n}},e.a.createElement("h1",null,o,p?e.a.createElement("span",{className:"subtitle"},p):null),t?e.a.createElement("section",{className:"markdown",dangerouslySetInnerHTML:{__html:t}}):null,this.getArticle())))}}B.defaultProps={timeline:!1};var H=s(12),G=s.n(H),F=(s(64),s(37)),q=s.n(F),V=(s(90),s(260)),I=s.n(V),z=s(261),U=s.n(z);s(414);class $ extends e.a.Component{constructor(){super(...arguments),this.state={error:null}}componentDidCatch(n,a){this.setState({error:n,info:a})}render(){const{children:n}=this.props,{error:a,info:s}=this.state;return a?e.a.createElement(U.a,{type:"error",message:a.toString(),description:s.componentStack}):n}}var W=s(262);class K extends e.a.Component{constructor(n){super(n),this.state={codeExpand:!1,sourceCode:"",copied:!1,copyTooltipVisible:!1,showRiddleButton:!1},this.demoRef=null,this.handleCodeExpand=(()=>{const{codeExpand:n}=this.state;this.setState({codeExpand:!n})}),this.saveAnchor=(n=>{this.anchor=n}),this.handleCodeCopied=(()=>{this.setState({copied:!0})}),this.onCopyTooltipVisibleChange=(n=>{n?this.setState({copyTooltipVisible:n,copied:!1}):this.setState({copyTooltipVisible:n})})}get RenderDemo(){const{demo:n}=this.props;return"TSX"===n.demoType?n.module.default||null:"VUE"===n.demoType?e.a.createElement("div",{ref:n=>this.demoRef=n}):null}shouldComponentUpdate(n,a){const{codeExpand:s,copied:t,copyTooltipVisible:e}=this.state,{expand:o}=this.props;return(s||o)!==(a.codeExpand||n.expand)||t!==a.copied||e!==a.copyTooltipVisible}get HasDemo(){return!!this.props.demo.module.default}componentDidMount(){const{demo:n}=this.props,{code:a}=n;this.setState({sourceCode:a,codeExpand:!this.HasDemo}),"VUE"===n.demoType&&this.demoRef&&new W.a({render:a=>a(n.module.default)}).$mount(this.demoRef)}render(){const{state:n,props:a}=this,{metadata:s,highlightedStyle:t,expand:o,demo:p}=a,{copied:c}=n,l=n.codeExpand||o,i=O()({"code-box":!0,expand:l}),u=p.title,r=O()({"highlight-wrapper":!0,"highlight-wrapper-expand":l}),d=p.codeHtml;return e.a.createElement("section",{className:i,id:s.id},e.a.createElement("section",{className:"code-box-demo",style:this.HasDemo?{}:{padding:"10px"}},e.a.createElement($,null,this.RenderDemo)),e.a.createElement("section",{className:"code-box-meta markdown"},e.a.createElement("div",{className:"code-box-title"},e.a.createElement("a",{href:`#${s.id}`,ref:this.saveAnchor},u)),e.a.createElement("div",{className:"code-box-description"},e.a.createElement("div",{dangerouslySetInnerHTML:{__html:p.description}})),e.a.createElement("div",{className:"code-box-actions"},e.a.createElement(I.a,{text:n.sourceCode,onCopy:this.handleCodeCopied},e.a.createElement(q.a,{visible:n.copyTooltipVisible,onVisibleChange:this.onCopyTooltipVisibleChange,title:c?"copied":"copy"},e.a.createElement(G.a,{type:n.copied&&n.copyTooltipVisible?"check":"copy",className:"code-box-code-copy"}))),e.a.createElement(q.a,{title:l?"Hide Code":"Show Code"},e.a.createElement("span",{className:"code-expand-icon"},e.a.createElement("img",{alt:"expand code",src:"https://gw.alipayobjects.com/zos/rmsportal/wSAkBuJFbdxsosKKpqyq.svg",className:l?"code-expand-icon-hide":"code-expand-icon-show",onClick:this.handleCodeExpand}),e.a.createElement("img",{alt:"expand code",src:"https://gw.alipayobjects.com/zos/rmsportal/OpROPHYqWmrMDBFMZtKF.svg",className:l?"code-expand-icon-show":"code-expand-icon-hide",onClick:this.handleCodeExpand}))))),e.a.createElement("section",{className:r,key:"code"},e.a.createElement("div",{className:"highlight",dangerouslySetInnerHTML:{__html:d}}),t?e.a.createElement("div",{key:"style",className:"highlight"},e.a.createElement("pre",null,e.a.createElement("code",{className:"css",dangerouslySetInnerHTML:{__html:t}}))):null))}}const{useState:Y,useCallback:Z}=e.a;function X(n){const[a,s]=Y(!1),t=Z(()=>{s(!a)},[a]),o=Object(c.f)(),{md:p}=n,{metadata:l}=p,i=p.default,u=1===l.cols,r=[],d=[];i.forEach((n,s)=>{const t=e.a.createElement(K,{md:p,metadata:p.metadata,demo:n,key:s+n.title+o.pathname,expand:a});s%2==0||u?r.push(t):d.push(t)});const k=O()({"code-box-expand-trigger":!0,"code-box-expand-trigger-active":a}),{title:m,subtitle:g}=l;return e.a.createElement(_.a,{title:`${g||""} ${m} - Jugg`},e.a.createElement("article",null,e.a.createElement(J,{html:p.html}),e.a.createElement("section",{className:"markdown"},e.a.createElement("h1",null,m,g?e.a.createElement("span",{className:"subtitle"},g):null),e.a.createElement("section",{className:"markdown"}),e.a.createElement("h2",null,"代码演示",e.a.createElement(q.a,{title:a?"collpse":"expand"},e.a.createElement(G.a,{type:`${a?"appstore":"appstore-o"}`,className:k,onClick:t})))),e.a.createElement(C.a,{gutter:16},e.a.createElement(A.a,{span:u?24:12,className:u?"code-boxes-col-1-1":"code-boxes-col-2-1"},r),u?null:e.a.createElement(A.a,{className:"code-boxes-col-2-1",span:12},d)),e.a.createElement("section",{className:"markdown api-container",dangerouslySetInnerHTML:{__html:p.extra}})))}const Q=(n,a)=>{n.addEventListener?n.addEventListener("change",a):n.addListener&&n.addListener(a)},nn=(n,a)=>{n.removeEventListener?n.removeEventListener("change",a):n.removeListener&&n.removeListener(a)};function an(n){const[a,s]=t.useState(null),[e,o]=t.useState();return t.useEffect(()=>{if("undefined"!=typeof window){const a=matchMedia(n);s(a);const t=n=>{o(n.matches)};return Q(a,t),()=>{nn(a,t)}}s(null)},[n]),t.useEffect(()=>{a&&o(a.matches)},[a]),{result:a,matches:e}}function sn(){return!!an(`(max-width:${an.DIMENSION_MAP.sm})`).matches}function tn(){return e.a.createElement("div",{id:"page-404"},e.a.createElement("section",null,e.a.createElement("h1",null,"404"),e.a.createElement("p",null,"你要找的页面不存在",e.a.createElement(p.c,{to:"/"},"返回首页"))),e.a.createElement("style",{dangerouslySetInnerHTML:{__html:"#react-content { height: 100vh; background-color: #fff }"}}))}an.DIMENSION_MAP={xs:"480px",sm:"576px",md:"768px",lg:"992px",xl:"1200px",xxl:"1600px"};var en=class extends e.a.Component{constructor(n){super(n)}componentDidMount(){}render(){return e.a.createElement("footer",{id:"footer"},e.a.createElement("div",{className:"footer-wrap"},e.a.createElement(C.a,null,e.a.createElement(A.a,{md:6,sm:24,xs:24},e.a.createElement("div",{className:"footer-center"},e.a.createElement("h2",null,"相关资源"),e.a.createElement("div",null,e.a.createElement("a",{target:"_blank",href:"https://ant.design/index-cn"},"Ant Design")),e.a.createElement("div",null,e.a.createElement("a",{target:"_blank",href:"http://pro.ant.design"},"Ant Design Pro")))),e.a.createElement(A.a,{md:6,sm:24,xs:24},e.a.createElement("div",{className:"footer-center"},e.a.createElement("h2",null,"技术栈"),e.a.createElement("div",null,e.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://github.com/facebook/react"},"React")),e.a.createElement("div",null,e.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://github.com/vuejs/vue"},"Vue")),e.a.createElement("div",null,e.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://github.com/webpack/webpack"},"webpack")),e.a.createElement("div",null,e.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://github.com/microsoft/TypeScript"},"TypeScript")))),e.a.createElement(A.a,{md:6,sm:24,xs:24},e.a.createElement("div",{className:"footer-center"},e.a.createElement("h2",null,"帮助"),e.a.createElement("div",null,e.a.createElement("a",{target:"_blank ",href:"https://github.com/daief/jugg/issues"},"Issues")))),e.a.createElement(A.a,{md:6,sm:24,xs:24},e.a.createElement("div",{className:"footer-center"},e.a.createElement("h2",null,"Me"),e.a.createElement("div",null,e.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://github.com/daief/jugg"},"Jugg")),e.a.createElement("div",null,e.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://github.com/daief"},e.a.createElement(G.a,{type:"github"})," Github")),e.a.createElement("div",null,e.a.createElement("a",{target:"_blank",href:"https://daief.tech"},e.a.createElement(G.a,{type:"book"})," Blog")))))),e.a.createElement("div",{className:"bottom-bar"},"Thank"," ",e.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://yuque.com/afx/blog"},"AFX's")," ",e.a.createElement("span",{className:"heart"},"❤")," & Rewrited by"," ",e.a.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://github.com/daief/jugg"},"jugg")))}};const{useState:on,useMemo:pn}=e.a;var cn=Object(c.g)(function(n){const{pageMap:a}=y(),{location:s}=n;!function(){const n=Object(c.f)();Object(t.useEffect)(()=>{document.body.scrollTop=0,document.documentElement.scrollTop=0},[n.pathname])}();const o=a.get(s.pathname),{isArticle:p,isTimeline:l}=function(n,a){return pn(()=>{const s=/^\/docs\//.test(a);let t=!1;if(!n)return{isArticle:s,isTimeline:t};const{layout:e,title:o,timeline:p}=n.metadata;return t=void 0!==p?!!p:"CHANGELOG"===o.toUpperCase(),"article"===e||!e&&["README","CHANGELOG"].includes(o.toUpperCase())?{isArticle:!0,isTimeline:t}:"demo"===e?{isArticle:!1,isTimeline:t}:{isArticle:s,isTimeline:t}},[n,a])}(o,s.pathname),i=o?p?e.a.createElement(B,{md:o,timeline:l}):e.a.createElement(X,{md:o}):e.a.createElement(tn,null),[u,r]=on(function(n){let a="";try{a=decodeURIComponent(n.pathname.split("/").filter(Boolean)[0])}catch(n){}return[a].filter(Boolean)}(s)),d=O()("main-container",{"main-container-component":!p}),k=e.a.createElement(j,{openKeys:u,selectedKeys:[s.pathname],onOpenChange:r}),m=sn();return e.a.createElement("div",{className:"main-wrapper"},e.a.createElement(C.a,null,m?e.a.createElement(R.a,{key:"Mobile-menu",wrapperClassName:"drawer-wrapper"},k):e.a.createElement(A.a,{xxl:4,xl:5,lg:6,md:24,sm:24,xs:24,className:"main-menu"},e.a.createElement(T.a,null,e.a.createElement("section",{className:"main-menu-inner"},k))),e.a.createElement(A.a,{xxl:20,xl:19,lg:18,md:24,sm:24,xs:24},e.a.createElement("section",{className:d},i),e.a.createElement(en,null))))}),ln=s(36),un=s.n(ln);s(47);class rn extends e.a.PureComponent{get FirstPage(){const{menuData:n}=this.context,a=n=>{if(!n||!Array.isArray(n))return"";for(let s=0;s<n.length;s++){const t=n[s];return t.path?t.path:a(t.children)}};return a(n)}render(){return e.a.createElement("div",{className:"home-page-wrapper banner-wrapper",id:"banner"},e.a.createElement("div",{className:"banner-bg-wrapper"},e.a.createElement("svg",{width:"400px",height:"576px",viewBox:"0 0 400 576",fill:"none"},e.a.createElement("ellipse",{cx:"100",cy:"100",rx:"6",ry:"6",stroke:"#2F54EB",strokeWidth:"1.6"}),e.a.createElement("g",{transform:"translate(200 450)"},e.a.createElement("g",{style:{transformOrigin:"50% 50%",transform:"rotate(-340deg)"}},e.a.createElement("rect",{stroke:"#FADB14",strokeWidth:"1.6",width:"9",height:"9"})))),e.a.createElement("div",{className:"banner-bg"})),e.a.createElement("div",{className:"banner page"},e.a.createElement("div",{className:"img-wrapper",style:{opacity:1}},e.a.createElement("svg",{width:"482px",height:"500px",viewBox:"0 0 482 500"},e.a.createElement("defs",null,e.a.createElement("path",{d:"M151,55 C129.666667,62.6666667 116,74.3333333 110,90\n            C104,105.666667 103,118.5 107,128.5 L225.5,96 C219.833333,79\n            209.666667,67 195,60 C180.333333,53 165.666667,51.3333333 151,55\n            L137,0 L306.5,6.5 L306.5,156 L227,187.5 L61.5,191 C4.5,175\n            -12.6666667,147.833333 10,109.5 C32.6666667,71.1666667 75,34.6666667\n            137,0 L151,55 Z",id:"mask"})),e.a.createElement("g",{stroke:"none",strokeWidth:"1",fill:"none",fillRule:"evenodd",transform:"translate(0, 30)"},e.a.createElement("g",{id:"Group-7",transform:"translate(56.000000, 124)"},e.a.createElement("g",{style:{transform:"translate(0px, 5.61562px) rotate(3.50976deg)"}},e.a.createElement("image",{id:"cc2",alt:"globe",xlinkHref:"https://gw.alipayobjects.com/zos/rmsportal/DJWUmdpxcQakQHwhPjzf.png",width:"124px",height:"130px"}))),e.a.createElement("g",{id:"Group-8",transform:"translate(127.000000, 82)"},e.a.createElement("g",{style:{transform:"rotate(-3.50976deg)"}},e.a.createElement("image",{id:"cc1",alt:"globe",xlinkHref:"https://gw.alipayobjects.com/zos/rmsportal/DEaRdiYbAyVNRelJpwXx.png",width:"195px",height:"163px"}))),e.a.createElement("g",{id:"Group-13",transform:"translate(0.000000, 41.000000)"},e.a.createElement("g",{style:{transform:"translate(0px, 0.255556px)"}},e.a.createElement("ellipse",{fillOpacity:"0.4",fill:"#2F54EB",opacity:"0.3",cx:"390",cy:"25.9920529",rx:"6",ry:"5.99205288"})),e.a.createElement("g",{style:{transform:"translate(0px, -0.498147px)"}},e.a.createElement("circle",{fillOpacity:"0.4",fill:"#2F54EB",opacity:"0.3",cx:"402",cy:"3",r:"3"})),e.a.createElement("g",{style:{transform:"translate(0px, 0.498147px)"}},e.a.createElement("ellipse",{stroke:"#13C2C2",strokeWidth:"1.6",cx:"419",cy:"313.994702",rx:"4",ry:"3.99470192"})),e.a.createElement("g",{style:{transform:"translate(0px, -0.648409px)"}},e.a.createElement("rect",{fill:"#FFE600",opacity:"0.6",transform:"translate(285.224453, 179.218136) rotate(-340.000000)\n                translate(-285.224453, -179.218136) ",x:"277.244453",y:"171.248705",width:"15.96",height:"15.9388607",rx:"3.6"})),e.a.createElement("g",{style:{transform:"translate(0px, 0.817451px)"}},e.a.createElement("rect",{stroke:"#F5222D",strokeWidth:"1.6",transform:"translate(184.000000, 18.000000) rotate(8.000000)\n                translate(-184.000000, -18.000000) ",x:"176.8",y:"10.8",width:"14.4",height:"14.4",rx:"3.6"})),e.a.createElement("g",{style:{transform:"translate(0px, -0.817451px)"}},e.a.createElement("path",{d:"M11.6005591,127.582431 L14.1769733,132.010943\n                C15.1767883,133.729492 14.5941396,135.933161\n                12.8755911,136.932976 C12.325874,137.25279 11.7012453,137.421269\n                11.0652659,137.421269 L5.91243747,137.421269\n                C3.92421237,137.421269 2.31243747,135.809494\n                2.31243747,133.821269 C2.31243747,133.185289\n                2.48091636,132.560661 2.80073009,132.010943\n                L5.37714432,127.582431 C6.37695929,125.863883\n                8.58062832,125.281234 10.2991769,126.281049\n                C10.8384011,126.594758 11.2868499,127.043207\n                11.6005591,127.582431 Z",stroke:"#13C2C2",strokeWidth:"1.6",transform:"translate(8.489147, 131.606717) rotate(18.000000)\n                translate(-8.489147, -131.606717) "})),e.a.createElement("g",{style:{transform:"translate(0px, 1.20997px)"}},e.a.createElement("path",{d:"M168.708021,336.081114 L171.995111,342.213024\n                C172.516977,343.186539 172.150843,344.398784\n                171.177328,344.920649 C170.88673,345.076428\n                170.562126,345.157945 170.232408,345.157945\n                L163.658227,345.157945 C162.553657,345.157945\n                161.658227,344.262514 161.658227,343.157945\n                C161.658227,342.828226 161.739744,342.503622\n                161.895523,342.213024 L165.182613,336.081114\n                C165.704478,335.1076 166.916723,334.741466 167.890238,335.263331\n                C168.237419,335.449442 168.52191,335.733933\n                168.708021,336.081114 Z",stroke:"#2F54EB",strokeWidth:"1.6",transform:"translate(166.945513, 340.091794) rotate(18.000000)\n                translate(-166.945513, -340.091794) "}))),e.a.createElement("g",{style:{transform:"translate(0px, 5.61562px)"}},e.a.createElement("g",{id:"Group-15",transform:"translate(373.000000, 204.000000)",strokeWidth:"1.35"},e.a.createElement("path",{d:"M19.8372093,0.173184358 L1.82452431,52.3407821",id:"Path-2-Copy-5",stroke:"#000000"}),e.a.createElement("ellipse",{id:"Oval-9-Copy-14",stroke:"#0D1A26",fill:"#FFFFFF",cx:"2.27484144",cy:"50.9916201",rx:"1.35095137",ry:"1.34916201"})),e.a.createElement("g",{id:"Group-9",transform:"translate(322.000000, 107.000000)"},e.a.createElement("g",{style:{transformOrigin:"50px 40px",transform:"rotate(-3.50976deg)"}},e.a.createElement("image",{id:"cc3",alt:"globe",xlinkHref:"https://gw.alipayobjects.com/zos/rmsportal/cCmuVrmQIJYlrhFjiPDZ.png",width:"160px",height:"66px"}))),e.a.createElement("g",{id:"Group-12",transform:"translate(271.000000, 2)"},e.a.createElement("g",{style:{transformOrigin:"125px 200px",transform:"rotate(3.50976deg)"}},e.a.createElement("image",{id:"cc0",alt:"globe",xlinkHref:"https://gw.alipayobjects.com/zos/rmsportal/TOElddMOrCWlgZvWTJna.png",width:"184px",height:"293px"})))),e.a.createElement("g",{id:"Group-14",transform:"translate(150.000000, 230.000000)"},e.a.createElement("g",{id:"Group-22",transform:"translate(62.000000, 7.000000)"},e.a.createElement("image",{id:"cc4",alt:"globe",xlinkHref:"https://gw.alipayobjects.com/zos/rmsportal/FpKOqFadwoFFIZFExjaf.png",width:"151px",height:"234px"})),e.a.createElement("mask",{id:"mask-2"},e.a.createElement("use",{xlinkHref:"#mask",fill:"white",transform:"translate(-42, -33)"})),e.a.createElement("g",{mask:"url(#mask-2)"},e.a.createElement("g",{style:{transformOrigin:"122.7px 58px",transform:"rotate(3.50976deg)"}},e.a.createElement("g",{transform:"translate(-16, -52)"},e.a.createElement("g",{transform:"translate(16, 52)"},e.a.createElement("path",{d:"M83.1700911,35.9320015 C63.5256194,37.9279025\n                      44.419492,43.1766434 25.8517088,51.6782243\n                      C14.3939956,57.7126276 7.77167019,64.8449292\n                      7.77167019,72.4866248 C7.77167019,94.1920145\n                      61.1993389,111.787709 127.105708,111.787709\n                      C193.012078,111.787709 246.439746,94.1920145\n                      246.439746,72.4866248 C246.439746,55.2822262\n                      212.872939,40.6598106 166.13127,35.3351955",id:"line-s",stroke:"#0D1A26",strokeWidth:"1.35",strokeLinecap:"round",transform:"translate(127.105708, 73.561453)\n                      rotate(-16.000000) translate(-127.105708, -73.561453) "})),e.a.createElement("g",{style:{transform:"translate(58.6538px, 29.3832px)"}},e.a.createElement("image",{alt:"globe",id:"id2",xlinkHref:"https://gw.alipayobjects.com/zos/rmsportal/IauKICnGjGnotJBEyCRK.png",x:"16",y:"62",width:"26px",height:"26px"}))))))))),e.a.createElement("div",{className:"text-wrapper"},e.a.createElement("h1",null,"Jugg"),e.a.createElement("p",null,"A naive front-end scaffold."),e.a.createElement("div",{className:"banner-btns",key:"buttons"},e.a.createElement(p.c,{to:this.FirstPage},e.a.createElement(un.a,{type:"primary",className:"banner-btn components"},"快速上手"))))))}}rn.contextType=w,rn.defaultProps={className:"banner"};var dn=rn;var kn=class extends e.a.Component{render(){const{isMobile:n}=this.props,a={...this.props,isMobile:n};return e.a.createElement(_.a,{title:"Jugg"},e.a.createElement(e.a.Fragment,null,e.a.createElement("div",{className:"main-wrapper"},e.a.createElement("style",{dangerouslySetInnerHTML:{__html:"\n    .main-wrapper {\n      padding: 0;\n    }\n    #header {\n      box-shadow: none;\n      max-width: 1200px;\n      width: 100%;\n      margin: 20px auto 0;\n      padding: 0 24px;\n    }\n    #header,\n    #header .ant-select-selection,\n    #header .ant-menu {\n      background: transparent;\n    }\n    #header #logo {\n      padding: 0;\n    }\n    #header .ant-row > div:last-child .ant-menu,\n    #header .nav-phone-icon {\n      display: none;\n    }\n    #header .ant-row > div:last-child .header-lang-button {\n      margin-right: 0;\n    }\n    footer .footer-wrap {\n      width: 100%;\n      padding: 0;\n    }\n    footer .footer-wrap .ant-row {\n      width: 100%;\n      max-width: 1200px;\n      padding: 86px 24px 93px 24px;\n      margin: auto;\n    }\n    @media only screen and (max-width: 767.99px) {\n      #footer .footer-wrap{\n        padding: 40px 24px\n      }\n      footer .footer-wrap .ant-row {\n        padding: 0;\n      }\n    }\n  "}}),e.a.createElement(dn,Object.assign({},a))),e.a.createElement(en,null)))}},mn=(s(88),s(263)),gn=s.n(mn),hn=(s(426),s(264)),fn=s.n(hn);s(428),s(430);class bn extends e.a.Component{constructor(){super(...arguments),this.state={menuVisible:!1},this.handleShowMenu=(()=>{this.setState({menuVisible:!0})}),this.handleHideMenu=(()=>{this.setState({menuVisible:!1})}),this.onMenuVisibleChange=(n=>{this.setState({menuVisible:n})}),this.handleLangChange=(()=>{})}componentDidMount(){}render(){const{menuVisible:n}=this.state,{isMobile:a}=this.props,s=a?"inline":"horizontal",t=[e.a.createElement(un.a,{ghost:!0,size:"small",onClick:this.handleLangChange,className:"header-lang-button",key:"lang-button"},"语言"),e.a.createElement(g.a,{className:"menu-site",mode:s,selectedKeys:["home"],id:"nav",key:"nav"},e.a.createElement(g.a.Item,{key:"antd"},e.a.createElement("a",{href:"https://ant.design/index-cn",className:"header-link",target:"_blank",rel:"noopener noreferrer"},"Ant Design")),e.a.createElement(g.a.Item,{key:"pro"},e.a.createElement("a",{href:"http://pro.ant.design",className:"header-link",target:"_blank",rel:"noopener noreferrer"},"pro")))];return e.a.createElement("header",{id:"header",className:"clearfix"},a&&e.a.createElement(gn.a,{overlayClassName:"popover-menu",placement:"bottomRight",content:t,trigger:"click",visible:n,arrowPointAtCenter:!0,onVisibleChange:this.onMenuVisibleChange},e.a.createElement(G.a,{className:"nav-phone-icon",type:"menu",onClick:this.handleShowMenu})),e.a.createElement(C.a,null,e.a.createElement(A.a,{xxl:4,xl:5,lg:5,md:6,sm:24,xs:24},e.a.createElement(p.c,{to:"/",id:"logo"},e.a.createElement("img",{alt:"logo",src:"https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg",style:{marginRight:15}}),"Jugg")),e.a.createElement(A.a,{xxl:20,xl:19,lg:19,md:18,sm:0,xs:0},e.a.createElement("div",{id:"search-box"},e.a.createElement(G.a,{type:"search"}),e.a.createElement(fn.a,{ref:n=>this.searchInput=n,placeholder:"Search in Jugg"})),!a&&t)))}}var xn=Object(c.g)(n=>{const a=sn();return e.a.createElement(bn,Object.assign({},n,{isMobile:a}))});class jn extends e.a.Component{constructor(n){super(n),this.state={}}render(){const{children:n}=this.props;return e.a.createElement("div",{className:"page-wrapper"},e.a.createElement(xn,null),n)}}Object(u.b)();const wn="browser"==={title:"Jugg",description:"A naive front-end scaffold."}.mode?p.a:p.b,yn=n=>{const a=t.createElement(c.a,Object.assign({},n));return!1===n.layout?a:t.createElement(jn,null,a)},En=()=>{const{pageMap:n}=y();return t.createElement(c.c,null,t.createElement(yn,{path:"/",exact:!0,component:kn}),[...n.entries()].map(([n])=>t.createElement(yn,{path:n,key:n,exact:!0,component:cn})),t.createElement(yn,{path:"*",exact:!0,component:tn,layout:!1}))};"undefined"!=typeof document&&Object(o.render)(t.createElement(E,null,t.createElement(wn,{basename:{title:"Jugg",description:"A naive front-end scaffold."}.basename||"/"},t.createElement(En,null))),document.getElementById("app"))},44:function(n,a,s){"use strict";(function(n){s.d(a,"b",function(){return e}),s.d(a,"a",function(){return p});var t=s(0);function e(){"undefined"==typeof window||window.React?n.React=t:window.React=t}function o(n,a){const s=n=>"number"==typeof n?n:999;n.metadata.order=s(n.metadata.order),a.metadata.order=s(a.metadata.order);const t=n.metadata.order-a.metadata.order;if(0!==t)return t;const e=n.metadata.title,o=a.metadata.title;return e===o?0:e>o?1:-1}function p(n,a){const s=Object.keys(n),t=[...a.keys()],e=t.filter(n=>/^\/docs\//.test(n)).sort((n,s)=>o(a.get(n),a.get(s))).map(n=>{const{metadata:s}=a.get(n),{title:t}=s;return{title:t,path:n}}),p=s.filter(n=>"docs"!==n).map(n=>({title:n,children:t.filter(a=>new RegExp("^/"+encodeURIComponent(n)+"/").test(a)).sort((n,s)=>o(a.get(n),a.get(s))).map(n=>{const{metadata:s}=a.get(n),{title:t}=s;return{title:t,path:n}})}));return[...e,...p]}}).call(this,s(23))},440:function(n,a,s){"use strict";s.r(a);var t={name:"vueDemo",data:()=>({count:1})},e=(s(359),s(256)),o=Object(e.a)(t,function(){var n=this,a=n.$createElement,s=n._self._c||a;return s("div",[n._v("\n  count: "+n._s(n.count)+"\n  "),s("br"),s("button",{on:{click:function(a){n.count++}}},[n._v("click to add")])])},[],!1,null,"5e065728",null);o.options.__file="d0b148e9941e77415646f09c122620be.vue";a.default=o.exports},66:function(n,a,s){}});